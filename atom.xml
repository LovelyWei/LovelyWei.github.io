<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LovelyWei&#39;s 废纸篓</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hex.moe/"/>
  <updated>2022-12-04T06:53:33.906Z</updated>
  <id>https://hex.moe/</id>
  
  <author>
    <name>LovelyWei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>边缘行者</title>
    <link href="https://hex.moe/p/58041928/"/>
    <id>https://hex.moe/p/58041928/</id>
    <published>2022-12-04T06:25:42.000Z</published>
    <updated>2022-12-04T06:53:33.906Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h4><p><del>《赛博朋克：阴沟里的老鼠》是由CD PROJEKT…</del></p><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><p>不扯了，最近这两天看完了边缘行者感触还蛮多的。首先，2077的世界观我一直是蛮喜欢的，游戏虽然没玩但是剧情大部分在首发线下云完成了大部分的主线剧情内容，可以说，背景带入感很深(划)，非常的吸引我。这两天也是在思考许多许多的问题，以至于 <del>软体不稳定</del> 精神状态不佳，恰巧的是边缘行者这部片 <del>在发病后几天</del> 也是开学一周后没这么忙碌从而进入了我的视野中。 <em>接下来可能有剧透</em> 再看之前对具体的剧情并不是很了解，听到传闻十分的治愈，加上世界观本身也喜欢，就开始看了起来。谁想到第一集就开始放刀子（x</p><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><p>啊，什么霓虹灯下的浪漫，后现代的悲剧，具体的剧情分析和哲学那些我不懂啦，就说说一开始令自己感触较深的一幕是第二集被Lucy骗了的时候（但是月球约会真的好浪漫） <del>坏女人坏女人，反转了，是好女人</del> 心里真是咯噔了一下，并主动的调高了情感阈值，事实证明是正确的选择，再随后的几集，赛博朋克干的脏活累活就不评价了<del>硬要说还有点美式价值观私货？</del> 但是实在是太炫酷了（（ 什么是真正的安全工程师，啊不是，是黑客，合理的离谱但却又不那么的离大谱，<del>Lucy姐姐太帅了</del> ，啊，是机械飞升，<del>是帅炸天的近源渗透</del>。</p><h4 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h4><p>随着剧情的展开，环绕着全片主题的赛博精神病（Cyberpsychosis）逐渐的拉开了帷幕，虽然剧情中并未清晰的指出赛博精神病的具体成因，但是却暗中暗示了赛博精神病的原因是“强大的义体吞噬灵魂”，不过，这只是剧情的暗示，对我个人的理解而言，赛博精神病的主要成因并不止义体改造，还关乎着每个改造人自身的精神状况，在一个压抑底层又没有未来的夜之城，男主的崩溃，大块头的奔溃，更像与一种“范进中举”般，瞬间得到的强大实力和过去的价值观相冲击（同时还有杀人如麻等buff），加速了精神崩溃的这一过程，从此，留住每位主角便只剩下身边的同伴，在Dave失去Lucy，Maine失去Dorio后，他们的悲剧便已成为了定局。</p><h4 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h4><p>接近尾声时，全片人物背景已经介绍明了，渴望打破夜之城规矩的赛博朋克们也不过是另类的公司狗（什么脏活累活大外包），全剧中两大公司势力在结束后毅然岿然不动，屹立不倒，为故事画上了讽刺的句号，回看主角团的一生，是背叛，是伤害，每个人成为赛博朋克的原因也许不同，但逐渐融入一个模板化的黑产大家庭，是否也变得不朋克了呢，虽然我也想不到什么好的反对荒坂公司办法，属于是站着说话不腰疼了。<del>开个V的外挂再来说话</del> 普通人在夜之城的一生我不敢相信，但我认为，成为传奇绝对是一件可笑的事情，这种事情也只能是，你干我理解，要我干我不干了吧。</p><h4 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h4><p>再谈Dave，男主后期的心声确实把我干沉默了，原因在看的前几天我也思考过这些问题，我实现不了每个人的愿望了，也许人应该先去优先实现自己的愿望，那我自己的愿望是什么呢，我得出了恐怖的答案，也许不算答案？答案就是我不知道，我不知道从何而起，自己的愿望开始从心中消失，都说没有一个男孩子的梦想是在一线城市有一套房，在多年前我也许能开着玩笑说着这个笑话，但是现在的我，做不到了。我的梦想被他人的期望所占领，究竟是为何，我也无从得出，但是从影片中，再一次警醒了自己，作为一个工具，最终得到的只有悲剧。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>这篇观后感是两个月前写下的,最近突然想起来了还有个博客…索性发上来算了. </p><p>之后应该也不会怎么更新文章,但是关于页和样式倒是想大改,比较已经过时蛮久了 <del>可惜没有动力</del> ,再一个是因为经历了一些事情,也不再想暴露过多个人信息了.回看了下历史文章留下的只有感慨,接下来在校内社团写的一些科普类(? 文章可能会发上来…</p><p>就酱</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;0x00&quot;&gt;&lt;a href=&quot;#0x00&quot; class=&quot;headerlink&quot; title=&quot;0x00&quot;&gt;&lt;/a&gt;0x00&lt;/h4&gt;&lt;p&gt;&lt;del&gt;《赛博朋克：阴沟里的老鼠》是由CD PROJEKT…&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x01&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>我的2020(下)</title>
    <link href="https://hex.moe/p/e5270b01/"/>
    <id>https://hex.moe/p/e5270b01/</id>
    <published>2021-02-02T08:42:00.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>[已完坑]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>下半年也没有学到什么,甚至一篇Blog也没有发…虽然已经如此糟糕了,但是年末总结还是要写下的. 证明自己还活着和写下对未来的少许期望.</p><p>依照惯例,博主文笔不好,所以这这一篇依旧是给自己看的毫无营养的流水账,也许更像一种日记吧.</p><a id="more"></a><h2 id="我的下半年"><a href="#我的下半年" class="headerlink" title="我的下半年"></a>我的下半年</h2><h3 id="暑假-6月"><a href="#暑假-6月" class="headerlink" title="暑假 6月"></a>暑假 6月</h3><p>在下半年开始的三个月内中,平平淡淡,无所事事,也受到疫情的影响,虽然自己没有中招新冠病毒,但上半年的新闻让我感到压抑,心情一直很糟糕,学业和技术上的事情都没有动过,一旦想起就会变得头疼,想在这几个月内让自己放松一下…</p><p>日常活动主要是找高中的同学和朋友,逛逛街,吃吃饭,虽然只是短暂的快乐,但也总比没有好.</p><h3 id="上海之旅-7月"><a href="#上海之旅-7月" class="headerlink" title="上海之旅 7月"></a>上海之旅 7月</h3><p>由于图片过多,占的篇幅较大,这部分内容挪动到了 <a href="/p/b2266cd1/">上海之旅</a></p><h3 id="无所事事-漫无止境-的8月"><a href="#无所事事-漫无止境-的8月" class="headerlink" title="无所事事 漫无止境 的8月"></a>无所事事 <del>漫无止境</del> 的8月</h3><p>这段时间感觉并没有什么实质性的收获 主要是摸鱼和约朋友出来逛逛街… <del>养老</del></p><h3 id="学校-9月-10月-11月-12月"><a href="#学校-9月-10月-11月-12月" class="headerlink" title="学校 9月/10月/11月/12月"></a>学校 9月/10月/11月/12月</h3><h4 id="开学"><a href="#开学" class="headerlink" title="开学"></a>开学</h4><p>月初开学,终于回到了久违的学校,凭着初中英语水平的我裸考了一次四级,理所当然的没过(</p><p>随着正式开学,进入大二的我专业课程逐渐多了起来,有</p><ul><li>计算机网络</li><li>计算机组成原理</li><li>微控制器应用</li></ul><p>类似这些名字看似高大上的课程.</p><p>同时开始了新学期的第一个错误决定,我没有选择自修/免修这些课程.</p><p>天真的我对我校课程还有一丝的期待,想着去上几门高质量的专业课,现实把我狠狠的教育了一顿…</p><p>事实证明可以在一个星期内就能学完我校整个学期的所有计算机专业课内容.</p><p>接下来的各种错误决定便接连发生了,去上各种水课的我并没有珍惜好宝贵的时间,选择了在课堂上上网摸鱼,在这里我也不想多为自己狡辩是因为课堂吵闹等原因了…</p><h4 id="社团"><a href="#社团" class="headerlink" title="社团"></a>社团</h4><p>同时到了选社团和选择选修课程的时间,但我今年并没有继续留在信息安全相关的社团.</p><p>主要原因大概还是我个人,大概是因为以下几点原因</p><ul><li>平时不够活跃,加上半个学期的疫情影响,并没有很好的融入社团中</li><li>在学校CTF战队招人时也没有积极的去参与</li><li>并不是信息安全专业的学生</li></ul><p>结果就是没能进入我校CTF战队.</p><p>最后选择加入了相对轻松而且开心的日语社(</p><h4 id="选修"><a href="#选修" class="headerlink" title="选修"></a>选修</h4><p>选修课选择了一个说轻松也轻松,说困难也困难的 计算机视觉 相关选修.</p><p>平常睡觉,期末炼出物体识别的丹作为大作业上交就可以.</p><p>(如何炼丹全靠自学</p><p>剩下的更多时间在观赏日本动画片与参观深圳,回想起来,这一年的确是颓废的一年.</p><h4 id="动画片"><a href="#动画片" class="headerlink" title="动画片"></a>动画片</h4><p>观赏的动画片都是一些知名/口碑较好且年代较为久远的,相信口碑较好的动画片一定很有意思,主要有(</p><ul><li>EVA</li><li>轻音少女</li><li>京吹</li><li>利兹与青鸟</li><li>请问你要来点兔子吗</li></ul><p>除&lt;轻音少女&gt;和&lt;点兔&gt;是放松心情的外,其他几部比较有深度,从中学到了许多东西,算是影响深刻了.(在动画片里学东西是不是搞错了什么</p><p><del>可是现在都 2021/2/2 了 EVA 终 怎么还没有.</del></p><h4 id="重返深渊"><a href="#重返深渊" class="headerlink" title="重返深渊"></a>重返深渊</h4><p>这次回到深圳,印象发生了很大的改变,也许是呆久了 (其实也没多久,半年都不到) ,脑海中逐渐映出一句话.</p><p>远看深圳像天堂,近看深圳像牢房.</p><p>有空时常常走街串巷,体会到的不再是大城市的美好与光鲜亮丽,反倒觉得这个城市特别的压抑…人活在深圳会体会到整个社会都在给你压力.</p><p>人们在地铁站内步伐匆忙,聊的事情也是不外乎炒股/赚钱,有着近乎离谱的房价与物价 <del>在市中心附近吃饭人均90,还是麦当劳1+1好</del> ,是当之无愧的内卷之城.</p><p>同时,我认为深圳也是一座赛博之城,还是由于疫情的原因,各种健康码/人脸识别测温/无接触取餐一夜间占领了市场,回想起去年还是前年看过了一篇文章,里面的内容已经不再是幻想,而是渐渐地在这个城市中成为现实…</p><blockquote><p><a href="https://www.zhihu.com/question/351592617/answer/884128175" target="_blank" rel="external nofollow noopener noreferrer">中式赛博朋克，“未来已来”</a></p></blockquote><p>不过无论我对这座城市是喜欢也好,讨厌也好,也改变不了任何事实.</p><p>不可否认的是深圳市对于年轻人而言有着更多的机会,更高的薪酬,以及更多的压力.</p><p>我想以后就业,也还会尽量的选择在这个城市吧,虽然可能是租着房子,每周996的干活.</p><h4 id="认识的人"><a href="#认识的人" class="headerlink" title="认识的人"></a>认识的人</h4><p>虽然是一名社恐,但是在这个学期中也认识了几位新的小可爱,也有了第一次 <del>鸽子</del> 网友见面会.</p><blockquote><p><del>这里的细节被抹掉了</del></p></blockquote><p>一个比较失败的地方在于没有认识到可爱的学弟学妹,校内除了同班同学外基本上不认识其他人了,和校内日语社的小可爱们没有什么共同话题,也没有参加校内的大型活动(</p><p><del>我觉得就算参加了也不会有什么结果的,毕竟社恐</del></p><h4 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h4><p>今年的爱情收获也是 <code>0</code> , 没有!</p><p>但宿舍和朋友圈的小伙伴也逐渐脱单了,虽然理智上我有更加重要的事情要去做,这个水平的我根本无法保护和去爱任何人…</p><p>但是还是避免不了心里难受.</p><p><del>平时能为自己找到一万种理由,却在关键时刻找不到我能爱别人的理由</del></p><h4 id="未来方向"><a href="#未来方向" class="headerlink" title="未来方向"></a>未来方向</h4><p>没能顺利的加入我校CTF战队这件事情对我的影响还算蛮大的 <del>能算是对我打击吗(?</del> …以至于后面思考了一段时间未来该干一些什么,继续往信息安全方向发展的话会缺少与校内同龄人交流的机会,各种各样的机会也会变小,和原本的目标相差较远.</p><p><del>看到他们一起挖SRC和去HW还蛮羡慕的</del></p><p>若选择往开发方向,在去年开学没有加入算法竞赛的队伍…</p><p>逐渐的,对信安方面热情下降了许多,除了上面的原因外还有一个原因是遇到了瓶颈,如果需要继续深入的研究信息安全需要各种各样的计算机基础,数学基础,与英语基础.</p><p>同时CURD也不是太想干,婉拒了学校小程序开发的邀请.</p><p>思考一段时间未来该干什么后,虽然还没有想清楚一个结果,但算是想开了一个方向.</p><p>虽然孤独,但一个人也挺好的.</p><p>信安的兴趣减弱了但是还是想深入学习RE和PWN,加上各种计算机的基础对开发也有好处,所以在课余的时间把&lt;深入理解计算机系统&gt;和汇编相关的书籍看完了.</p><p>看完后,本来想写一个简易的操作系统,但是由于懒的缘故并没有动手(</p><h4 id="想干的事"><a href="#想干的事" class="headerlink" title="想干的事"></a>想干的事</h4><p>接下来需要做的事情应该就是继续研究各种机械工业出版社的大理石封面书籍,提升计算机基础,2021年6月的英语4级别,同时需要面对2022年4月的一场大考试.</p><p>大考试是广东省本科插班生的考试(也就是俗称的专升本),虽然平时不是很愿意提及学历问题,但这里是日记对吧,日记是没问题的吧(</p><p>对于从中专再到大专的我来说,文化课水平基本上是丈育水平,实际上还蛮担心这次的考试,加上广东也算是个内卷大省,录取率并不算高,所以接下来的时间可能需要更多的投入到数理基础和外语政治上,过完寒假后研究计算机和其他有趣的时间就要变少了.</p><p><del>脑袋笨笨,欠下的迟早要补上的</del></p><p>不过说到兴趣方面,还是希望做二进制研究,最近对软件无线电也有少许兴趣.</p><p>但理智告诉我需要研究算法与开发,学历和实际经验都不足的情况下研究信安是要饿肚子的.</p><p>如果有时间的话,希望我能入门算法,顺便能写一些技术博客就好了.</p><h4 id="违约的事"><a href="#违约的事" class="headerlink" title="违约的事"></a>违约的事</h4><p>上一年插下了许多的旗子,但貌似只完成了一个,将CSAPP看完了.</p><p>英语四级和算法…只能明年再战了.</p><p>但是关于驾驶证的事情,是我后悔但无力改变现实的一件事,考驾照需要大概5000 CNY,由于家境贫寒…并没有那么多钱钱让我去考,一月份参加的一下小竞赛获奖奖金也迟迟不见下发,未来可能也没有时间再去考驾照,只能说残念了.</p><h4 id="关于病"><a href="#关于病" class="headerlink" title="关于病"></a>关于病</h4><p>之前关于页面写了一行</p><blockquote><p>得了一个治不好但是又没这么快死的病.</p></blockquote><p>今年又去检查了几次指标,在水平范围内,但是都在逐渐恶化…最后一次测试达到了临界值…目前今年还没去医院检查,挺害怕再去住一次医院(</p><p>不过自从上次出院后,作息改良了许多,目前也在坚持运动了,等瘦一点就再去检查一次,听天由命吧(</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总而言之,2020年是颓废的一年,无所事事,也一无所成,年度状态是焦虑不安,常常使用着手机浏览无意义的碎片化信息却不愿意专注努力的做一件事…</p><p>虽然不想写失败之类的话语,但回首2020,的确是我的失败一年,错过了机会,浪费了时间,没有兑现自己的承诺</p><blockquote><p>一如既往的健康,在接下来的一年里不再迷茫,”喜欢就好” 能有成果</p></blockquote><p>三件事一件也未完成,原计划与年末的年度总结也拖到了2月份,在我写下这篇文章的同时心情杂乱但又未差到极点(不然就不会有这篇文章了),但按照惯例.</p><p>感谢一直为我提供支持与帮助的所有人们,希望2021的我能有所收获.</p><p><strong>记于 2021/2/2 16:42:00</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[已完坑]&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;下半年也没有学到什么,甚至一篇Blog也没有发…虽然已经如此糟糕了,但是年末总结还是要写下的. 证明自己还活着和写下对未来的少许期望.&lt;/p&gt;
&lt;p&gt;依照惯例,博主文笔不好,所以这这一篇依旧是给自己看的毫无营养的流水账,也许更像一种日记吧.&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>上海之旅</title>
    <link href="https://hex.moe/p/b2266cd1/"/>
    <id>https://hex.moe/p/b2266cd1/</id>
    <published>2021-02-01T15:00:10.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>璀璨不夜城，繁华梦一场</strong></p></blockquote><a id="more"></a><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>一个星期前看到朋友圈的人都去了上海玩，正好又有两个同学陪同，<del>脑子一热</del>就决定去上海看看了。</p><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><p>时间转眼到了七月份,国内的疫情也控制的很好,朋友圈中掀起了旅游的热潮,当时的机票也挺便宜,但之前一直都没怎么出过远门 <del>主要是没钱</del> 在预算 1500CNY(实际上后面还是超额了) 左右构思了一个星期的行程计划后,决定约上了几个朋友前往上海.</p><p>作为第一次坐飞机,内心既激动又惊慌,在决定出发日的前几日,下单了南航飞往上海的机票,来回合计 700 CNY.</p><p>出发的前一天夜里,怀着对现代大都市的各种幻想中…失眠了.同时也迫不及待地想对比下,作为老牌一线大城市的上海和深圳的种种不同.</p><h4 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h4><h5 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h5><p>值得纪念的早晨从前一晚的失眠开始,日常的和同学碰头,从家乡小城市坐了一个小时的机场快运大巴后,抵达了机场.</p><blockquote><p><em>接下来的一切就犹如梦境一般开始了</em></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/IMG_20200716_184955.jpg" alt></p><p>过了层层安检,又等了一个小时,终于踏上了飞机,但这次乘坐体验不是很好,原因是被人骗去了安全门附近,导致第一次的体验很糟心 x</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/IMG_20200716_201156.jpg" alt></p><p>起初还有点害怕之类的,但其实飞机比高铁好很多,上升和下降都不会很令人难受,最重要的是在飞行过程没有网络,不会有外发抖音的事情发生,带上大法降噪后,感觉和高铁一样(</p><h5 id="下机"><a href="#下机" class="headerlink" title="下机"></a>下机</h5><p>在浦东国际机场下了飞机,等一个已经提前偷跑的朋友过来接去酒店…结果等了一个小时,凌晨一点的上海,好冷…</p><p>不过不愧是国内第二大的机场,即使是凌晨12点也是人满为患 <del>(指打不上滴滴)</del> ,机场内还有地铁 <del>走断腿</del> </p><p>好在后面还是坐上了旅馆的接送车,第一天到了一个离机场近的郊区住下了.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_005506.jpg" alt></p><h4 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h4><h5 id="郊区"><a href="#郊区" class="headerlink" title="郊区"></a>郊区</h5><p>从郊区的旅馆的大床中醒来 <del>知らない天井だ</del> ,准备在旅馆周围吃一顿早餐然后坐旅馆的接送车到附近的地铁站,去市区内的酒店安置一下.</p><p>由于晚上到旅馆时候一片漆黑,加上也很累了,并没有很好的观察周围环境,第二天起床的时候发现上海郊区其实和广州城中村也没什么区别(x</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_085015.jpg" alt></p><p>随便在周围晃了下,感觉也没什么好吃的,决定去市区内在决定早餐吃什么了.</p><p>上海的郊区也很大,酒店的接送车坐了快半个小时才到最近的一个地铁站,开始有大城市的感觉了.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_092014.jpg" alt></p><p>由于某个不靠谱队友的原因,上了地铁后发现他还没有订好酒店,几个人在地铁上现场决定今晚睡哪里(坏</p><p>快速讨论出两个条件</p><ul><li>离地铁站近,靠经市区(陆家嘴)</li><li>便宜</li></ul><p>后决定了一个在 中山公园 地铁站附近的一家平价酒店 200CNY 左右.</p><h5 id="中山公园"><a href="#中山公园" class="headerlink" title="中山公园"></a>中山公园</h5><p>到了中山公园地铁站后第一个感觉是,来到了霓虹 (加上在上海的几天吃的都是日料后更加确信了)</p><p>出地铁站第一个看到的就是一个几乎全日语的广告牌.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_104411.jpg" alt></p><p>运气不好,天空下起了小雨,选择乘坐出租车到酒店,坐在出租车前排后自觉的系上了安全带,被司机大叔说 “哎,上海不用系安全带的” “欸,副驾驶位也不用吗?” “不用的,不用的”(kusa</p><p>到酒店稍微安置 <del>把东西一丢</del> 后就开始去附近找吃的了</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_121128.jpg" alt></p><p>走到了酒店附近的 龙之梦购物中心 的 花丸乌冬面 吃了份咖喱乌冬,感觉咖喱淡了点,比较一般. <del>为什么记得这么清楚,因为是来上海吃的第一顿日料(x</del></p><p>随后又走了走,感觉上海市区的购物中心挺密集的,基本上走两步就一个购物中心,不愧是现代化大都市(x</p><p>不过发现上海市挺多红绿灯的屏幕不太一样,使用的是方形点阵屏显示数字,不是七段数码管,感觉有点奇特.</p><p>回到了中山公园地铁站,乘坐地铁到了人民广场站.<del>二次元日开始</del></p><p>在等待地铁2号线的时候,感觉到非常的凉快(?</p><p>后面想了下,原因在2号线部分站没有全屏蔽门,所以比起广州深圳的地铁的风要大.</p><h5 id="人民广场"><a href="#人民广场" class="headerlink" title="人民广场"></a>人民广场</h5><p>出了地铁站后选择 福州路 的出口,一出门就看到了现代化的高楼与有历史气息的矮平房有点说不出的感觉.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_124432.jpg" alt></p><p>沿着 福州路 往下走,发现了一家二次元气息浓厚的罗森(意外发现),当时还是LoveLive主题的罗森,进入后发现有一些阿姨也在里面平常的挑选商品,该说…大城市包容性高吗,毕竟我看起来还是比较媚宅的.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_124503.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_124720.jpg" alt></p><p>图:二次元罗森.</p><p>在二次元罗森购买了个折扣中的咖啡(难喝),稍微坐下休息后,继续沿着 福州路 往下走.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_130741.jpg" alt></p><p>来到了上海书城,作为一个书城,算是挺大的了,进去逛了几圈,发现种类全面,环境也好 <del>羡慕,我住在这附近该多好</del></p><p>但是由于时间关系并没有呆多久,随后便沿着 福州路 继续往下走.</p><p>沿路发现上海二次元浓度还是蛮高的( <del>也许只是这一条街</del></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//20201226230846.png" alt></p><p>最后到了目的地 外文书店 <del>浓度最高的地方</del></p><p>逛了下二楼,基本上是外文的原版书,还有国家地理幼儿版,但可惜没有原版的国际地理,不然想买一份了.</p><p>到了4楼后就是外文书店的 Animate店 和 松阪书屋,卖各种周边和各种日文原版的轻小说和漫画书.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_135736.jpg" alt></p><p>在 Animate 逛了十多分钟,卖的很多是立牌,但是十分的…贵,基本上都要50CNY+,所以也就看看了…</p><p>Animate外是松阪书屋,可惜松阪书屋都是日文的原版书,并没有台译的轻小说和漫画书,也没有购买到什么.</p><p>出门后发现外文书店还是优秀历史建筑,1931年就存在了,刚刚进去逛的时候却没有感受快100年的建筑物有什么违和的历史气息.</p><p>这就是上海的一种魅力吧(?</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_143101.jpg" alt></p><p>继续向下后还有 文匯報 的旧址,接着看到了另一个让我感到新奇的东西</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_144233.jpg" alt></p><p>上海市区内还有许多电话亭,而且,这些电话亭还是能够正常使用的,在广东这边,我已经快10年没见过电话亭了吧.</p><p>随后又瞎逛了下,贴一些图和无端联想(</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_151007.jpg" alt></p><p><code>new 小区();</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_151346.jpg" alt></p><p>…不敢判断是BUG还真的壕(</p><p>后面到了 世贸广场 准备找吃的.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_154943.jpg" alt></p><p>世贸广场的乐高店 超凶.jpg</p><p>世贸广场内有一个贩卖专辑和音乐器材的店(SOUND STUDIO).</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_155625.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_155959.jpg" alt></p><p>世贸广场内没什么想吃的,逛着逛着便忘记吃饭了(</p><p>时间转眼间就到了下午五点,作为初到上海的游客,第一晚必定去的是 外滩 (</p><h5 id="外滩"><a href="#外滩" class="headerlink" title="外滩"></a>外滩</h5><p>在来的路上也发现上海的路名也挺有意思的,黄浦区大部分的路都是全国各地的省和省会名字(</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//20201227161710.png" alt></p><p>还有去外滩路上的一个百货名字,中日英三语(?</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_210617.jpg" alt></p><p>是和平饭店,看起来好高端,不过貌似不是很贵的样子(相对于某些别的高端酒店),最便宜可以花 1500CNY 住一晚 <del>以后有钱一定来住一晚</del></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_211506.jpg" alt></p><p>到外滩后,终于拍下了每个来上海的游客都会拍的一张照片.</p><p>不过相对于对面的东方明珠,我个人认为这一侧的万国建筑群更有魅力.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200717_211058.jpg" alt></p><p>随便拍了一下.</p><p>随后晚上几个人一起吃了顿海底捞结束这一天.</p><h4 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h4><p>一早起床没想好去哪决定逛逛 南京路 和 陆家嘴 好了.</p><h5 id="南京路与陆家嘴"><a href="#南京路与陆家嘴" class="headerlink" title="南京路与陆家嘴"></a>南京路与陆家嘴</h5><p>走过南京路,观望各种招牌和建筑,仿佛置身与历史与现代之间.</p><p>不过大多是奢侈品和餐饮店铺,走了两圈后发现一个比较有特色的 <code>M&amp;M Words</code>,全球只有五家,决定进去看看 <del>然后就中了消费主义陷阱</del></p><p>在 <code>M&amp;M Words</code> 里可以自己随意搭配巧克力豆,有各式各样的口味还有一堆 M&amp;M 的周边,吃了些巧克力豆后坐地铁来到了陆家嘴.</p><p>陆家嘴全是商场与写字楼,东方明珠有上千人,上不去…转了下后发现没有什么感兴趣的,就决定去地铁站吧.</p><p>去地铁站的路中,一直在想下一站选择去哪里,有什么是具有上海特色,并且好玩的…想了后发现一个作为一线大城市才有的产物,而上海作为中国最繁华的一线城市,不得不去一趟特色产物,并且我有兴趣的…那只有 妹抖咖啡厅 了(</p><h5 id="女仆咖啡厅1"><a href="#女仆咖啡厅1" class="headerlink" title="女仆咖啡厅1"></a>女仆咖啡厅1</h5><p>一开始来到了 思南公馆 的一家女仆咖啡厅,地方不算偏僻,离地铁站有些距离…但是服务态度比较一般…不过留言板还蛮有意思的,喝了杯普普通通的咖啡便离开了.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200718_185958.jpg" alt></p><p>棉花糖玛奇朵.jpg</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200718_185341.jpg" alt></p><p>留言板.jpg</p><p>出门后,时间一转到了晚上…去了…</p><h5 id="bilibili总部"><a href="#bilibili总部" class="headerlink" title="bilibili总部"></a>bilibili总部</h5><p>在写这一片文章时,我已经不记得当时为什么要去bilibili总部了…</p><p><del>相关资料已被抹除</del></p><h5 id="外滩-1"><a href="#外滩-1" class="headerlink" title="外滩"></a>外滩</h5><p>最后在回去酒店时,中途在陆家嘴下了地铁,突然想看看从陆家嘴望过的外滩.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200718_222152.jpg" alt></p><p>最后回到中山公园站时,发现出错口了…中山公园站有3条线,每个地铁线都有自己的出站口…我记得是3号口出然后出到了隔壁线的3号口.</p><p>花了半个小时走回酒店结束Day3.</p><h4 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h4><p>一大早去了豫园地铁站附近的城隍庙.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_171247.jpg" alt></p><p>第一次体验逛庙会的感觉(</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_171611.jpg" alt></p><p>不过大都是卖美食和中国结,书画之类的.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_173031.jpg" alt></p><p>在一排老字号中出现一个 Starbucks w</p><p>在庙中,有一家 <code>超能动漫</code> 也是手办和周边店.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_171817_1.jpg" alt></p><p>贴几张随手拍的(</p><p><em>二次元浓度过浓与NSFW警告</em></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_172239.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_172332.jpg" alt></p><p>NepNep.jpg</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_172400.jpg" alt></p><p>然后走着走着就出来了(</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_175847.jpg" alt></p><p>附一个好看的猫猫.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_180109.jpg" alt></p><p>转眼间就到了下午,随意吃了下便利店食物后来到了另一家 妹抖咖啡厅.</p><h5 id="女仆咖啡厅2"><a href="#女仆咖啡厅2" class="headerlink" title="女仆咖啡厅2"></a>女仆咖啡厅2</h5><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_185319.jpg" alt></p><p>由于对上一家印象不太好,觉得可能是去错地方了,趁着还有空便来到了另一家名为 <code>SABAC Cafe&amp;Bar</code> 的女仆咖啡厅.</p><p>这家咖啡厅比较有特色的地方是 早上是普通的女仆咖啡厅 晚上就化身为女仆酒吧了. <del>Rabbit House吗</del></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200719_185327.jpg" alt></p><p>总体感觉上比上一家好很多,点了杯普通拿铁咖啡喝,味道一般.</p><p>邻近换班时间去还听见几只女仆在唱歌 w</p><h5 id="大悦城"><a href="#大悦城" class="headerlink" title="大悦城"></a>大悦城</h5><p>最后去了一趟 静安区的大悦城 当时有 魔卡少女樱的展览 不过由于去的时候已经很晚的,就没看到什么..</p><p>最后回酒店时,在路上品尝了一份 <strong>光明冰砖</strong> 真的是便宜又大还好吃…可惜只在长三角贩卖,广东想吃只能网购了..</p><h4 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h4><p>第五天是一开始计划好的漫展日,之前在家附近的漫展并不是很精彩,想来看看上海的大型漫展是更好.</p><p>展览的地方在世博馆附近,在来的路上体验了上海的早高峰地铁,远处看见了瞩目的世博会的中国馆,不过由于时间关系,没能过去看.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_114618.jpg" alt></p><p>在漫展中主要也是看了一些手办之类的,对其他的活动没什么兴趣.</p><p>贴一些随手拍的图.</p><p><del>多图杀猫</del></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_094556.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//20201228152421.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112226.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112231.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112239.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112259.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112309.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112328.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112358.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200720_112414.jpg" alt></p><p>@某只猫娘(x</p><p>从结果来看并没有想象中的美好..漫展内没有什么能吸引我的活动.</p><p>随后回到了酒店,准备为回程做准备,结束为期五天的上海之旅.</p><h5 id="回程"><a href="#回程" class="headerlink" title="回程"></a>回程</h5><p>回程体验了下国内唯一一条高速磁悬浮,从地铁 磁浮龙阳路站 换乘磁悬浮.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200721_132902.jpg" alt></p><p>从感觉上来说,和高铁没什么区别嘛!</p><p>可能由于年代久远的原因,速度也没有和达到宣称速度.</p><p>但是体验上和高铁还是有细微不一样的(图丢了</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData//IMG_20200721_175641.jpg" alt></p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;璀璨不夜城，繁华梦一场&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>我的2020(上)</title>
    <link href="https://hex.moe/p/36a9de4d/"/>
    <id>https://hex.moe/p/36a9de4d/</id>
    <published>2020-06-04T12:18:46.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上半年一直在忙碌，到头来却不知道忙了什么，博客也有一段时间没更新了，再一看时间，一年已经过去一半了。打算写一篇给自己看的毫无营养流水账总结下自己杂乱无章的上半年…</p><a id="more"></a><blockquote><p>时隔比较久，一些数据记得不太清楚了，如有发现还请指正</p></blockquote><h2 id="我的上半年"><a href="#我的上半年" class="headerlink" title="我的上半年"></a>我的上半年</h2><h3 id="放假与新冠病毒"><a href="#放假与新冠病毒" class="headerlink" title="放假与新冠病毒"></a>放假与新冠病毒</h3><h5 id="1月12日"><a href="#1月12日" class="headerlink" title="1月12日"></a>1月12日</h5><p>回想起去年的最后一篇博客，作为大一新生的我刚刚结束军训，那是1月12号左右的样子，当时上网看到一条 <code>武汉出现多名不明肺炎感染者</code> 时候还留在学校准备体验无人的校园，看完新闻和相关消息后的我给父母打了通电话，提醒近期出门要注意。(感觉自己当时还挺)</p><p><em>令我和许多人都没想到的是，以往的世界就这样开始乱套了。</em></p><h5 id="1月18日"><a href="#1月18日" class="headerlink" title="1月18日"></a>1月18日</h5><p>网上各种言论满天飞 (事实证明，当时大部分都是对的)，官方还在可防可控中，武汉已经有几千例的感染者了，原定20号返程，觉得形势不太妙，19日，深圳出现首位感染者，当天赶紧收拾好东西回家(跑路)，开始了咸鱼生活。</p><h3 id="在家Neet的日常"><a href="#在家Neet的日常" class="headerlink" title="在家Neet的日常"></a>在家Neet的日常</h3><p>自从新冠病毒开始后时间和经历都关系在疫情的和各种事件上了…那段时间的心情和状态都很糟糕，也没有太多的精力去关心技术和学业上的问题（虽然也看了一点），导致白白浪费了半年的光阴…</p><h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><p>今年年初应该是我这半年来最勤奋的时候了，因为BGP的文章隔了很久都没更新，过意不去，就研究了几天草草写完了，其实写完那一篇后本还想了一些其他的主题，比如之前弄了个PGP签名与加密，看着手上吃灰的树莓派接了个1602LCD显示屏跑了点脚本，可是后面却没什么动力写了。</p><p>除了博客外，我在tg还运营着一个频道，主要是分享信息安全信息和知识的（之前可能是这样），尝试运营一段时间后感到自己的水平严重不足，这也是后期为何更新越来越慢的原因，自己的知识和水平不够，不能够做深度分析和持续输出有价值的内容…（博客也差不多）</p><p>对于这两种情况感到十分的惭愧，只能去提升自己的知识技术水平了。</p><h4 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h4><p>中间有一段时间为了寻找一个能在Windows上做全局代理（不仅仅是HTTP）的东西（因为没有软路由）苦恼了几天，原本找到一个方案是，在电脑上开一个<code>OpenWrt</code>虚拟机再稍加配置，但是这种方案显得有点蠢。</p><p>然后想到了<code>SSTap</code>，可惜<code>SSTap</code>由于已经很久没更新，使用起来也有种种不便，稍加搜索看到Github上的<code>Netch</code>项目，这个项目和<code>SSTap</code>差不多，都是用于游戏加速，也可以全局代理，方法都是在Windows上创建一个虚拟网卡，配置路由转发流量。</p><p>使用上<code>Netch</code>后还是感觉到有一些不便，好在这个项目是开源的，项目语言用的是C#，就开始试着阅读源码做出修改并提交了第一个<code>Pull Request</code>，大家都挺热情也熟悉了合作开发，当看到自己的代码被<code>Merged</code>的时候感到十分开心（虽然也没写几行）。</p><h4 id="看"><a href="#看" class="headerlink" title="看"></a>看</h4><p>在这段时间中，心情和心态不好，在逛着知乎，看着刚编的故事打算痛哭一场，想着自己为什么会这么菜，同时也是为了开阔自己的眼界寻找一些新的社区和优秀的人在网上冲浪，点着点着看到了 千里冰封 和 面包 等人，看着别人明明与自己同龄却有如此大的区别感到十分的沮丧，进一步关注到推特后看着他们的点点滴滴和日常到后来 迟先生 卖的”卷心菜”也算是收获颇多，思考了很多令人难受的问题…但是现在已经记不太清了。</p><p><del>虽然以上一个都不认识我</del></p><p>在看完这些同龄人后我改变了这段时间养成的一些颓废习惯，也有了新的目标和动力，算是这段时间最大的一个收获。（不然真就太菜了</p><h4 id="忙"><a href="#忙" class="headerlink" title="忙"></a>忙</h4><blockquote><p>这是最不重要的一段，所以我将它放在了最后面</p></blockquote><p>前段时间一直很忙，忙于各种活动、比赛，我一直在想，学校的种种活动和竞选比赛我到底能获得到什么，我想了很久，我是为了名利还是为了技术，为了社交学习，还是为了其他，参加了一些后我发现</p><p><strong>学校的各种活动并不能让我学到什么</strong></p><p>我一开始觉得是我想错了，去咨询的许多人的意见，最后我觉得…还是不太适合我。</p><p>所以最后推托掉了社团竞选，干部竞选，比赛竞赛等。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>最后还是总结下自己的一些需要改进的缺点，主要还是关于未来和习惯的问题。</p><p>关于未来：</p><p>距上一篇总结半年过去了，还是没想清楚自己想要什么，这是一个很危险的情况，实际上可能想清楚的，却感觉太渺茫(?)，不管怎样希望在后面的每一步都能好好想着自己想要的是什么。</p><p>关于习惯：</p><p>在几天前，趁着618的特价买了许多书，其实我是没有阅读习惯的，还有运动量不足，英语词汇量不足，字写的也不好看，这些没办法说什么洗心革面、痛改前非，也只能规定每日计划，慢慢完成与改变了…</p><p>最后做出一点希望与方向，希望接下来能好好提升自己的知识水平和思想深度，多看一点书，多补补理数基础，少上S1和知乎。</p><p>写的很杂，还请见谅。</p><p><strong>记于 2020/6/4 23:45</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;上半年一直在忙碌，到头来却不知道忙了什么，博客也有一段时间没更新了，再一看时间，一年已经过去一半了。打算写一篇给自己看的毫无营养流水账总结下自己杂乱无章的上半年…&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>年轻人的第一个私人BGP(三) - 带入家中</title>
    <link href="https://hex.moe/p/953be679/"/>
    <id>https://hex.moe/p/953be679/</id>
    <published>2020-02-28T11:56:38.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>BGP系列也好久没更新过了,最近放假放的有点久…干了点新的东西,让家里的网络用上自己的IP.</p><a id="more"></a><p>解决方案是 strongSwan IKEv2 VPN隧道到VPS服务器上,IKEv2 的证书使用的是Let’s encrypt的证书,域名挂在了<code>CloudFlare</code>上以便于调用api.</p><h2 id="配置服务器环境"><a href="#配置服务器环境" class="headerlink" title="配置服务器环境"></a>配置服务器环境</h2><p>博主这里使用了 香港阿里云的轻量VPS <code>CentOS7</code> (物理位置近+便宜) + HE.net 的BGP隧道,至于实现方案可以参考<a href="https://hex.moe/p/d6a20b99/">上一篇bgp系列的文章</a>.</p><p>参考上一篇文章,这里在上一篇文章处做出一点修改.</p><ul><li>首先将需要留给客户端的IP段从dummy1的IP删除,并且可以将自己的IP设为出口IP</li></ul><blockquote><p>之前的文章中配置并广播好了BGP但是出口ip还是 he.net 给的ip,并没有配置自己的IP为出口IP,解决这个问题其实很简单,只要将原有的<code>dummy1</code>配置好的IP删除,将IP配置到<code>sit1</code>接口上,并把默认路由的<code>src</code>配置为出口的ip即可 (多谢群友</p></blockquote><pre><code>[root@host ~]# ip addr add dev sit1 2a0f:9400:8000::1/48[root@host ~]# ip -6 route change default dev sit1  src 2a0f:9400:8000::1  metric 1[root@host ~]# curl ipv6.ip.sb2a0f:9400:8000::1</code></pre><hr><ul><li><h3 id="安装并配置-acme-sh-生成证书"><a href="#安装并配置-acme-sh-生成证书" class="headerlink" title="安装并配置 acme.sh, 生成证书"></a>安装并配置 acme.sh, 生成证书</h3><ol><li><p>安装 <a href="http://acme.sh/" target="_blank" rel="external nofollow noopener noreferrer">acme.sh</a> ,用于自助签发TLS证书,并创建一个<code>alias</code>方便使用.</p><pre><code class="sh">curl  https://get.acme.sh | shalias acme.sh=~/.acme.sh/acme.sh</code></pre></li><li><p>获取<code>CloudFlare</code>的<a href="https://dash.cloudflare.com/profile" target="_blank" rel="external nofollow noopener noreferrer">Api</a></p><blockquote><p>至于详细的获取<code>CloudFlare Api Token</code>可以参考<a href="https://hex.moe/p/aaafb04f/">利用CloudFlare Api实现DDNS</a>.</p></blockquote></li><li><p>写<code>Token</code>到环境变量</p><pre><code class="sh">export CF_Key=&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;export CF_Email=&quot;xxxx@sss.com&quot;</code></pre></li><li><p>现在,可以用命令自动创建证书了</p><pre><code class="sh">acme.sh --issue --dns dns_cf -d hex.moe -d vpn.hex.moe # 记得替换域名</code></pre></li><li><p>使用 <code>acme.sh --cron</code> 可以生成 cronjob 自动更新证书</p></li></ol><p>经过配置,应该可以在<code>/root/.acme.sh/vpn.hex.moe</code>中看到你的证书</p><pre><code class="sh">[root@host vpn.hex.moe]# pwd/root/.acme.sh/vpn.hex.moe[root@host vpn.hex.moe]# lsca.cer         vpn.hex.moe.cer   vpn.hex.moe.csr       vpn.hex.moe.keyfullchain.cer  vpn.hex.moe.conf  vpn.hex.moe.csr.conf</code></pre></li><li><h3 id="然后安装并配置-strongswan"><a href="#然后安装并配置-strongswan" class="headerlink" title="然后安装并配置 strongswan"></a>然后安装并配置 <code>strongswan</code></h3><ol><li><p>安装<code>strongswan</code></p><pre><code class="sh">yum install strongswan</code></pre></li><li><p>修改配置文件<code>ipsec.conf</code></p><blockquote><p>这里使用了旧版的配置文件,由于已经配置好了遂不再更变.( <del>又不是不能用</del></p></blockquote><pre><code class="sh">vim /etc/strongswan/ipsec.conf</code></pre><p>以下是内容:</p><pre><code class="conf">conn setupuniqueids = noconn %default   compress = yes   keyexchange=ike   ike=aes256-sha256-sha1-modp2048-modp1024,3des-sha256-sha1-modp2048-modp1024!   esp=aes256-sha256-sha1,3des-sha256-sha1!   leftdns=8.8.8.8,8.8.4.4,2001:4860:4860::8888 # 此处是dns   rightdns=8.8.8.8,8.8.4.4,2001:4860:4860::8888conn ikev2   dpdaction=clear   dpddelay=60s   rekey=no   fragmentation=yes   eap_identity=%identity   left=%any   leftid=&quot;vpn.hex.moe&quot; # 签发证书的域名   leftsubnet=0.0.0.0/0,::/0   leftauth=pubkey   leftcert=fullchain.cer   leftsendcert=always   leftfirewall=yes   right=%any   rightid=%any   rightsourceip=10.1.0.0/24,2a0e:b107:16::/48 # 要分配给客户端的ip,这里用了双栈   rightauth=eap-mschapv2   rightsendcert=never   auto=add</code></pre><blockquote><p>还有一套是<code>swanctl.conf</code>的新版配置文件,由于博主没有配置过所以不多做介绍.<br>可参考这一位博主写的 <a href="https://m13253.blogspot.com/2018/07/strongswan-ikev2-vpn.html" target="_blank" rel="external nofollow noopener noreferrer">用 strongSwan 配一个支持 AEAD 的远程访问 IKEv2 VPN</a>.</p></blockquote></li><li><p>配置<code>strongswan</code>的证书<br>使用软连接方便更新<code>ln -s [源路径] [目标路径]</code> , 将<code>/root/.acme.sh/[域名]</code>中的</p><ul><li><code>fullchain.cer</code>放入<code>/etc/strongswan/ipsec.d/certs</code></li><li><code>[域名].key</code>放入<code>/etc/strongswan/ipsec.d/private</code></li><li><code>ca.cer</code>放入<code>/etc/strongswan/ipsec.d/cacerts</code></li></ul></li><li><p>配置<code>ipsec.secrets</code>,添加用户</p><pre><code class="sh"> vim /etc/strongswan/ipsec.secrets</code></pre><p> 以下是我写的内容:</p><pre><code class="secrets"> # ipsec.secrets - strongSwan IPsec secrets file : RSA vpn.hex.moe.key # 这里是私钥的文件名 #这里是用户名和密码,%any表示任意用户名均可,EAP后面的为密码 user1 %any : EAP &quot;123456&quot;</code></pre></li></ol></li><li><p>配置<code>sysctl.conf</code> , 开启Linux的内核转发</p><pre><code class="sh">/etc/sysctl.conf</code></pre><p>在后面添加开启相关转发的内容</p><pre><code class="conf">net.ipv4.ip_forward = 1net.ipv4.conf.all.accept_redirects = 0net.ipv4.conf.all.send_redirects = 0net.ipv6.conf.all.forwarding=1</code></pre></li><li><p>配置iptables防火墙</p><pre><code class="sh">iptables -A INPUT -p ah -j ACCEPTiptables -A INPUT -p esp -j ACCEPTiptables -A INPUT -p udp -m udp --dport 500 -j ACCEPTiptables -A INPUT -p udp -m udp --dport 4500 -j ACCEPTiptables -A POSTROUTING -t nat -m policy --pol ipsec --dir out -j ACCEPTiptables -A POSTROUTING -t nat -s 10.1.0.0/24 -o eth0 -j MASQUERADEiptables -A FORWARD -t nat -i eth0 -m policy --pol ipsec --dir in -j ACCEPTiptables-savesystemctl restart iptables</code></pre><blockquote><p>虽然说如果<code>ah</code>和<code>esp</code>头如果走不通的话会走<code>udp</code>协议,但是还是加上了</p></blockquote></li><li><p>在阿里云的防火墙中开启<code>udp500</code>和<code>udp4500</code>端口</p><hr><p>firewalld的防火墙类似,由于博主的centos默认是iptables的并没有实践过,所以这里贴出某位博主帖子里写的内容.</p><blockquote><p>允许 ‘AH’ 和 ‘ESP’ 身份验证协议和加密协议通过防火墙</p></blockquote><pre><code class="sh">firewall-cmd --zone=public --permanent --add-rich-rule=&#39;rule protocol value=&quot;esp&quot; accept&#39;firewall-cmd --zone=public --permanent --add-rich-rule=&#39;rule protocol value=&quot;ah&quot; accept&#39;</code></pre><blockquote><p>开放 ipsec 和相关端口</p></blockquote><pre><code class="sh">firewall-cmd --zone=public --permanent --add-port=500/udpfirewall-cmd --zone=public --permanent --add-port=4500/udpfirewall-cmd --zone=public --permanent --add-service=&quot;ipsec&quot;</code></pre><blockquote><p>允许 ip 伪装</p></blockquote><pre><code class="sh">firewall-cmd --zone=public --permanent --add-masquerade</code></pre><blockquote><p>然后重新加载防火墙</p></blockquote><pre><code class="sh">firewall-cmd --reload</code></pre><hr></li><li><p>启动<code>strongswan</code>服务 <code>systemctl restart strongswan</code></p></li></ul><p>此时就能用Windows连接到IKEv2 VPN了!</p><h2 id="连接VPN"><a href="#连接VPN" class="headerlink" title="连接VPN"></a>连接VPN</h2><p>打开Win10的 <code>设置-&gt;网络和Internet-&gt;VPN</code> 并点击 <code>添加VPN连接</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200301003025.png" alt></p><p>写好配置并保存.</p><p>然后点击 <code>状态-&gt;更改适配器选项</code> 右键 <code>VPN-&gt;属性-&gt;网络</code></p><p>如果需要使用IPv4和IPv6流量都走VPN隧道的话你需要稍微调整下IPv4的设置</p><p>点击<code>IPv4-&gt;属性-&gt;高级</code> 勾选 <code>在远程网络上使用默认网关</code>和 取消勾选 <code>自动跃点</code> 跃点数写一个相对小的数值,比如说,我写了<code>5</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200301004612.png" alt></p><p>当然,我现在并不需要(</p><p>所以我将IPv4勾掉了,ipv4流量不走vpn,后来我连接上后…</p><p>…</p><blockquote><p>IPv6检测失败</p></blockquote><p>后面了解到,虽然IPv6中也有一个 <code>在远程网络上使用默认网关</code> 但是那个完全没有用,也不知道微软阿三程序员怎么写的,总之就是没有用,需要手动配置一下路由</p><p>所以,连接上VPN后,在<code>cmd</code>中敲入 <code>ipconfig</code> 查看分配到的ip</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200301005308.png" alt></p><p>并手动添加路由… </p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200301005426.png" alt></p><p><code>请求的操作需要提升</code>(权限) , 好吧 ,右键左下角的 <code>Win</code> 图标, 选择 <code>Windows Powershell (管理员)</code>,用打开的shell再次手动添加路由</p><pre><code class="sh">route add ::/0 [分配到的IP]</code></pre><p>此时再去测试一下…</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200301005811.png" alt></p><p>终于成功了,这也太累了…</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>其实想做这个项目已经很久了,只是一直没有动力去做,刚好放假放了这么多天,游戏也玩腻了,刷各种网站也刷累了,看到了某篇 <a href="https://www.91yunbbs.com/discussion/641/drcais-noob-bgplayer-in-1hour-%E7%BB%9D%E8%B5%9E%E9%80%9F%E6%88%90%E7%8F%AD-%E9%80%83" target="_blank" rel="external nofollow noopener noreferrer">Noob BGPlayer in 1hour 绝赞速成班</a> ,就来实现自己的方式了”带入家中”了,当成功的那一刻还是很开心的…</p><p>最后感谢MoeQing动物园的各位dalao的答疑(</p><p><del>什么?你说近期啊,近期还有一篇水文</del></p><p>以上</p><hr><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://blog.itnmg.net/2018/08/28/centos-7-ikev2-vpn-strongswan/" target="_blank" rel="external nofollow noopener noreferrer">https://blog.itnmg.net/2018/08/28/centos-7-ikev2-vpn-strongswan/</a></li><li><a href="https://www.91yunbbs.com/discussion/641/drcais-noob-bgplayer-in-1hour-%E7%BB%9D%E8%B5%9E%E9%80%9F%E6%88%90%E7%8F%AD-%E9%80%83" target="_blank" rel="external nofollow noopener noreferrer">https://www.91yunbbs.com/discussion/641/drcais-noob-bgplayer-in-1hour-%E7%BB%9D%E8%B5%9E%E9%80%9F%E6%88%90%E7%8F%AD-%E9%80%83</a></li><li><a href="https://recursiveg.me/2016/12/assign-ipv6-through-ipsec-and-strongswan/" target="_blank" rel="external nofollow noopener noreferrer">https://recursiveg.me/2016/12/assign-ipv6-through-ipsec-and-strongswan/</a></li><li><a href="https://m13253.blogspot.com/2018/07/strongswan-ikev2-vpn.html" target="_blank" rel="external nofollow noopener noreferrer">https://m13253.blogspot.com/2018/07/strongswan-ikev2-vpn.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BGP系列也好久没更新过了,最近放假放的有点久…干了点新的东西,让家里的网络用上自己的IP.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Network" scheme="https://hex.moe/tags/Network/"/>
    
      <category term="BGP" scheme="https://hex.moe/tags/BGP/"/>
    
  </entry>
  
  <entry>
    <title>Goodbye,2019</title>
    <link href="https://hex.moe/p/b02668d9/"/>
    <id>https://hex.moe/p/b02668d9/</id>
    <published>2019-12-31T04:13:39.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>一年到了尾声，是时候该做些总结了…</p><h2 id="今年的经历"><a href="#今年的经历" class="headerlink" title="今年的经历"></a>今年的经历</h2><p><em>不是很想过多的暴露个人信息，模糊细节了….</em></p><h3 id="0x01-上半年"><a href="#0x01-上半年" class="headerlink" title="0x01 上半年"></a>0x01 上半年</h3><p>今年三月份参加了个比赛拿了个二等奖,然后开始准备考试,准备一个多月后考上了位处深圳的一个大专,虽然留下的许多遗憾与不甘,但还是算给自己的上半年交上的一份及格答卷.</p><blockquote><p><em>给你群人均985,211拖后腿了实在对不起</em></p></blockquote><p>由于考试的考场是所在的学校,也在那时去参观了大学与深圳.</p><p>深圳真的很漂亮,初次去到时感觉相同,又感觉不同,从一个二线吊车尾城市过来的我觉得有地铁实在是太爽了(雾</p><h3 id="0x02-暑假"><a href="#0x02-暑假" class="headerlink" title="0x02 暑假"></a>0x02 暑假</h3><p>暑假实着是个大混子,从考上大学的后到入学这段时间,大概就没有什么实质性的学习和做想干的事情.</p><p>除了过的平平淡淡的十八岁生日外 这段时间可谓是我今年最黑暗的时刻了…</p><p>清晰的记得在中学毕业后和一群朋友跑出去网吧通宵后的第二天就进了医院的住院部,虽然住院进去时的病并不是很严重,但是医生给我安排完全身体检大礼包后…</p><p>一脸凝重的说:”你这个问题很大啊”</p><p>成吧,我了解病种后知道我得了 <em>一个治不好但是又没这么快死的病</em>.</p><blockquote><p><em>住院的半个月就是天天打针,肌肉注射,还是特别痛的那种,从此再也不怕屁股针了(雾</em></p></blockquote><p>在病房里弥漫着压抑和绝望.看着床上的病患和摇头的医生对人心理的影响是极大的</p><p>也就是在那段时间心理出了大问题,病房中压抑的我把 <strong><code>余华的 &lt;活着&gt;</code></strong> 又看了一遍 </p><p><strong><em>望着天空,不知所措</em></strong></p><p>好在有人 <del>和傻吊网友</del> 陪我散心才走出的阴影..真的很感谢他们.</p><p>之后暑假的零碎时间大部分跑去医院复查了</p><p>出院后再也不想住院了.PTSD+1</p><h3 id="0x03-入学"><a href="#0x03-入学" class="headerlink" title="0x03 入学"></a>0x03 入学</h3><p>入学是最欢乐的,新的学校,新的环境,加上位处深圳,虽然分配到的校区像个工厂,但是感觉环境还是很不错的.</p><p>接下来就是参加了许多的社团,也放弃了一些,在学校的这段时间一直都很迷茫,我决定了不功利的去选择,而是喜欢就好的态度,选择的道路无论好坏,也要要跪着走下去.</p><blockquote><p>关于这段经历更多参见 <a href="https://hex.moe/p/18b00e4c/">大学入学一个月总结</a></p></blockquote><h3 id="0x04-结尾"><a href="#0x04-结尾" class="headerlink" title="0x04 结尾"></a>0x04 结尾</h3><p>在校的一个学期,到香港与深圳游玩,去了做了一些”喜欢就好”的事情,参加了中科大的Hackergame,看了些书,学习二进制安全,做了自己的智能门锁等,这些事情将在接下来的文章中详细描述 <del>迫于时间关系</del>.</p><p>2020的钟声已经敲响,在新的一年里,希望自己与亲友的身体,一如既往的健康,在接下来的一年里不再迷茫,”喜欢就好” 能有成果,同时,也感谢在旧的一年里,为我提供支持与帮助的所有人们,谢谢你们.</p><p><strong>记于 2020/1/1 1:09</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200101005238.png" alt="来自师兄的教诲"></p><p><em>图:来自师兄的教诲</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一年到了尾声，是时候该做些总结了…&lt;/p&gt;
&lt;h2 id=&quot;今年的经历&quot;&gt;&lt;a href=&quot;#今年的经历&quot; class=&quot;headerlink&quot; title=&quot;今年的经历&quot;&gt;&lt;/a&gt;今年的经历&lt;/h2&gt;&lt;p&gt;&lt;em&gt;不是很想过多的暴露个人信息，模糊细节了….&lt;/em&gt;&lt;/p
      
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>关于伪造邮件的简单研究</title>
    <link href="https://hex.moe/p/4878b295/"/>
    <id>https://hex.moe/p/4878b295/</id>
    <published>2019-11-15T11:37:08.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>最近拿到了学校的邮箱,心血来潮想开始测试一下关于电子邮件安全之类的…说干就干…伪造一封退学通知书(雾</p><h2 id="伪造邮件的原理"><a href="#伪造邮件的原理" class="headerlink" title="伪造邮件的原理"></a>伪造邮件的原理</h2><p>最初的SMTP 协议定义 (1982年<a href="https://tools.ietf.org/html/rfc821" target="_blank" rel="external nofollow noopener noreferrer">RFC 821</a>) 中并没有写如何对发件人进行身份验证,所以任何人都可以说我是 Alice (这就导致了垃圾邮件和虚假邮件的产生.</p><p>那….知道原理后先来伪造一封邮件(</p><h2 id="使用Swaks伪造一封邮件"><a href="#使用Swaks伪造一封邮件" class="headerlink" title="使用Swaks伪造一封邮件"></a>使用<code>Swaks</code>伪造一封邮件</h2><ul><li><h3 id="Swaks-是什么"><a href="#Swaks-是什么" class="headerlink" title="Swaks 是什么?"></a>Swaks 是什么?</h3><p>Swaks的全称是 <code>Swiss Army Knife SMTP</code>(SMTP界的瑞士军刀),用于测试SMTP协议的各种操作.</p><p>附原文简介:</p><blockquote><p>swaks’ primary design goal is to be a flexible, scriptable, transaction-oriented SMTP test tool. It handles SMTP features and extensions such as TLS , authentication, and pipelining; multiple version of the SMTP protocol including SMTP , ESMTP , and LMTP ; and multiple transport methods including unix-domain sockets, internet-domain sockets, and pipes to spawned processes. Options can be specified in environment variables, configuration files, and the command line allowing maximum configurability and ease of use for operators and scripters.</p></blockquote></li><li><h3 id="测试目标"><a href="#测试目标" class="headerlink" title="测试目标"></a>测试目标</h3><p>首先直接输入了<code>swaks</code>,在to中写入自己的邮箱,先尝试了qq邮箱,然后被550了….</p><pre><code class="sh">kali@kali:~$ swaksTo: </code></pre><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200228160018.png" alt></p><p>没有关系,再测一下目标,试一下学校的邮箱,用的也是腾讯的企业邮箱…<br><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/1582886911.png" alt></p><p>成了,但是结果也没收到通知,翻了一下原来躺在垃圾箱里了…</p></li><li><h3 id="进一步尝试"><a href="#进一步尝试" class="headerlink" title="进一步尝试"></a>进一步尝试</h3><blockquote><p>这里博主用了之前的写法(几个月前),结果还是被拒了…腾讯升级的也太快了吧</p></blockquote><pre><code class="sh">kali@kali:~$ swaks --to xxxxxxx@mail.xxx.edu.cn --from info@example.com  --ehlo example.com --body hello --header &quot;Subject: hello&quot;</code></pre><p>第一次 550(我记得之前就是这样写的呀…),怀疑是<code>X-Mailer</code>挂着个swaks的问题,修改一下swaks</p><pre><code class="sh">kali@kali:~$ swaks --to xxxxxxx@mail.xxx.edu.cn --from info@example.com  --ehlo example.com --body hello --header &quot;Subject: hello&quot; --header-X-Mailer SMTP</code></pre><p>难不成还是<code>Message-Id</code>有kali的问题吗,也改一下吧…</p><pre><code class="sh">kali@kali:~$ swaks --to xxxxxx@mail.xxxx.edu.cn --from info@example.com  --ehlo example.com --body hello --header &quot;Subject: hello&quot;  --header-X-Mailer SMTP --header-Message-Id &#39;&lt;51891223094431836868@example.com&gt;&#39;</code></pre><p>也被拒了….没办法了,用个跳板吧.</p></li><li><h3 id="邮件托管平台"><a href="#邮件托管平台" class="headerlink" title="邮件托管平台"></a>邮件托管平台</h3><p>这里使用了<a href="https://support.smtp2go.com/hc/en-gb" target="_blank" rel="external nofollow noopener noreferrer">Smtp2go</a>这个平台作为一个跳板,用有信誉的SMTP服务器转发邮件会增加可信度(吧)</p><p>注册邮箱,注册时候需要有一个自己域名的邮件地址…注册好后免费的用户能发1000封邮件,足够了</p><p>初次登陆进去会让你设置用户名和密码,设置好后就可以使用Swaks+Smtp2go来伪造邮件了</p><pre><code>swaks --to id@xxx.edu.cn --from root@xxx.edu.cn\ --header-X-Mailer SMTP  --ehlo xxx.edu.cn --body &#39;test&#39;\ --server mail.smtp2go.com -p 2525 -au username -ap passwd</code></pre><p>发送后就能在收件箱收到了…稍加修改,加上附件和主题</p><pre><code>  swaks --to id@xxx.edu.cn --from root@xxx.edu.cn\ --header-X-Mailer SMTP  --ehlo xxx.edu.cn --body &#39;退学通知&#39;\ --server mail.smtp2go.com -p 2525 -au username -ap passwd \ --attach /home/kali/Desktop/Notice.docx --header &quot;Subject:退学通知&quot;</code></pre><p> 就…完成啦</p><p> <img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200228191934.png" alt></p><p> 效果图</p><p> 但是其实还是有一些问题的,比如发件人处并不是伪造的邮箱名称</p><p> <img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200228192125.png" alt></p><p> 加上Mail.from即可显示名称了</p><pre><code>  swaks --to id@xxx.edu.cn --from root@xxx.edu.cn\  --header-X-Mailer SMTP  --ehlo xxx.edu.cn --body &#39;退学通知&#39;\  --server mail.smtp2go.com -p 2525 -au username -ap passwd \  --attach /home/kali/Desktop/Notice.docx --header &quot;Subject:退学通知&quot; \  --h-From: &#39;教务处&lt;admin@xxx.edu.cn&gt;&#39;</code></pre><p> 最终效果<br> <img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20200228192546.png" alt></p></li><li><h3 id="附加-绕过SPF"><a href="#附加-绕过SPF" class="headerlink" title="附加:绕过SPF"></a>附加:绕过SPF</h3><p>SMTP出来了这么长时间里,其实伪造邮件一直都存在,如何解决这个问题呢?</p><p>早在2006年的<a href="https://tools.ietf.org/html/rfc4408" target="_blank" rel="external nofollow noopener noreferrer">RFC 4408</a>中提出了Sender Policy Framework (SPF)发件人政策框架 规定了如何验证发件人身份.</p><p>通过域名DNS TXT记录中的一段SPF文字 来验证发件人的SMTP服务器IP地址是不是属于当前域的IP.如果发件IP无法通过SPF验证则会降低邮件的可信度(有可能被拒信).</p><p>虽然QQ邮箱的安全性已经做的不错了,但是上面的邮件没有通过SPF记录的还是能正常的发送到收件人的邮箱中.</p><p>而其实绕过SPF记录也挺简单的,在使用了第三方SMTP服务器转发的情况下,将<code>from</code>写为第三方发件的域,如:</p><pre><code>swaks --to id@xxx.edu.cn --from info@smtp2go.com\--header-X-Mailer SMTP  --ehlo xxx.edu.cn --body &#39;退学通知&#39;\--server mail.smtp2go.com -p 2525 -au username -ap passwd \--attach /home/kali/Desktop/Notice.docx --header &quot;Subject:退学通知&quot; \--h-From: &#39;教务处&lt;admin@xxx.edu.cn&gt;&#39;</code></pre><p>由于各种邮箱显示的发件人都是<code>Header中的From</code>,所以这样做既通过了SPF验证也显示的是伪造的名字.</p></li></ul><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>其实一早就构思好了文章怎么写的了(在几个月前),结果因为咕咕太久了被腾讯升级邮箱的安全性后整个想好的都被打乱了…最终”简单研究”变得复杂了起来</p><p><del>我再也不敢咕咕了</del></p><p>以上</p><hr><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote><ul><li><a href="https://linux.die.net/man/1/swaks" target="_blank" rel="external nofollow noopener noreferrer">https://linux.die.net/man/1/swaks</a></li><li><a href="https://payloads.online/archivers/2019-05-09/1" target="_blank" rel="external nofollow noopener noreferrer">https://payloads.online/archivers/2019-05-09/1</a></li><li><a href="https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol" target="_blank" rel="external nofollow noopener noreferrer">https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol</a></li><li><a href="https://en.wikipedia.org/wiki/Sender_Policy_Framework" target="_blank" rel="external nofollow noopener noreferrer">https://en.wikipedia.org/wiki/Sender_Policy_Framework</a></li><li><a href="https://www.freebuf.com/sectool/92397.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.freebuf.com/sectool/92397.html</a></li><li><a href="https://www.freebuf.com/articles/web/133689.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.freebuf.com/articles/web/133689.html</a></li><li><a href="https://www.freebuf.com/articles/web/138764.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.freebuf.com/articles/web/138764.html</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近拿到了学校的邮箱,心血来潮想开始测试一下关于电子邮件安全之类的…说干就干…伪造一封退学通知书(雾&lt;/p&gt;
&lt;h2 id=&quot;伪造邮件的原理&quot;&gt;&lt;a href=&quot;#伪造邮件的原理&quot; class=&quot;headerlink&quot; title=&quot;伪造邮件的原理&quot;&gt;&lt;/a&gt;伪造邮件的原理
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Hack" scheme="https://hex.moe/tags/Hack/"/>
    
      <category term="Email" scheme="https://hex.moe/tags/Email/"/>
    
      <category term="Social Engineering" scheme="https://hex.moe/tags/Social-Engineering/"/>
    
  </entry>
  
  <entry>
    <title>年轻人的第一个私人BGP(二) - 广播你的IP</title>
    <link href="https://hex.moe/p/d6a20b99/"/>
    <id>https://hex.moe/p/d6a20b99/</id>
    <published>2019-10-31T11:06:15.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>接上篇BGP,这个时候已经拿下了自己ASN和IP,在RIPE中可以查询到,并且也添加了 <code>Route6</code> 对象,接下来就把自己的IP广播出去….  </p><p>在广播之前,需要寻找一家能为你做广播的电信运营商….Emm至少在国内是不可能了,不过还可以选择云服务器,Vultr 提供了广播BGP的服务,还有 he.net 家的BGP隧道..</p><blockquote><p>参考:<br><a href="https://blog.yuzu.im/marchives/133" target="_blank" rel="external nofollow noopener noreferrer">https://blog.yuzu.im/marchives/133</a><br><a href="https://blog.ni-co.moe/public/559.html" target="_blank" rel="external nofollow noopener noreferrer">https://blog.ni-co.moe/public/559.html</a></p></blockquote><h2 id="开通Vultr的BGP广播服务"><a href="#开通Vultr的BGP广播服务" class="headerlink" title="开通Vultr的BGP广播服务"></a>开通Vultr的BGP广播服务</h2><blockquote><p>直达链接:<a href="https://my.vultr.com/bgp/" target="_blank" rel="external nofollow noopener noreferrer">https://my.vultr.com/bgp/</a></p></blockquote><blockquote><p>由于下面的过程博主没都截图,所以…只好文字描述下了..</p></blockquote><ul><li>将 <code>I have my own IP</code> 和 <code>I have my own ASN</code> 修改为YES</li><li><code>My ASN</code> 填入ASN号码</li><li><code>BGP Password</code> 中填入自己想要的密码</li><li><code>IP Prefixes</code> 填入前缀</li><li>LOA文件可参考下图 <del>瞎编一个</del></li></ul><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191106084609.png" alt></p><ul><li><code>Routes</code> 选择 <code>Full Table</code></li><li>然后点击<code>Setup</code></li></ul><p>接下来注意ASN和IP Prefixes Whois留下的邮箱,Vultr会发送邮件到邮箱,然后让你选择同意和不同意.</p><p>接下来就是等待客服人工开通了</p><h2 id="Vultr下广播的的配置"><a href="#Vultr下广播的的配置" class="headerlink" title="Vultr下广播的的配置"></a>Vultr下广播的的配置</h2><p>关于Linux的版本,博主选择的是CentOS 7</p><p>首先</p><ul><li><p>安装<code>bird6</code></p><blockquote><p>yum install bird6 -y</p></blockquote></li><li><p>停止服务</p><blockquote><p>service bird6 stop</p></blockquote></li><li><p>修改 <code>/etc/bird6.conf</code>的配置文件</p></li><li><p>修改配置中的 <code>router id</code> 改为自己的IPv4地址</p><pre><code>router id 198.51.100.1;</code></pre></li><li><p>在文件的最后添加上</p><pre><code>protocol bgp vultr{  local as 你的asn(开头不带as);  source address 实例的ipv6;  import none;  export all;  graceful restart on;  multihop 2;  neighbor 2001:19f0:ffff::1 as 64515; #这个是Vultr服务器的ip  password &quot;在申请广播的时候设置的bgp密码&quot;;}</code></pre></li><li><p>寻找到<code>protocol static</code></p><pre><code>protocol static{  route  [v6前缀] via [实例的IPv6];  #route  2001:2333:2333::/48 via 4096:4096:4096:338:5400:01ff:fecf:596c;}</code></pre><blockquote><p>vultr要求广播的ipv6最小block为/48,ipv4为/24</p></blockquote></li><li><p>找到<code>protocol direct</code></p><pre><code>protocol direct{  interface &quot;dummy*&quot;;  import all;}</code></pre></li><li><p>保存配置</p></li><li><p>配置虚拟网卡以及ip地址</p><pre><code class="sh">ip link add dev dummy1 type dummy # 添加虚拟网卡ip link set dummy1 upip addr add dev dummy1 [前缀内的任意一个地址] # 添加地址</code></pre></li><li><p>启动<code>bird6</code></p><blockquote><p>service bird6 restart</p></blockquote></li><li><p>查看状态 <code>birdc6 show route</code>/<code>birdc6 show proto all</code></p></li><li><p>完</p></li></ul><blockquote><p>在 <a href="https://tools.ipip.net/traceroute.php?v=6" target="_blank" rel="external nofollow noopener noreferrer">https://tools.ipip.net/traceroute.php?v=6</a> 中可以看traceroute</p></blockquote><h2 id="he-net-的BGP隧道"><a href="#he-net-的BGP隧道" class="headerlink" title="he.net 的BGP隧道"></a>he.net 的BGP隧道</h2><blockquote><p>直达链接: <a href="https://tunnelbroker.net/new_tunnel.php?type=bgp" target="_blank" rel="external nofollow noopener noreferrer">https://tunnelbroker.net/new_tunnel.php?type=bgp</a></p></blockquote><p>该填写的还是类似上面Vultr中的内容</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191106093253.png" alt></p><p>然后就是等待客服验证你的ASN和IP前缀</p><blockquote><p>建议先在Vultr做好广播后再找 he.net 开通隧道,博主和 he.net 的客服为了验证我的ASN是我的ASN,我的前缀IRR验证了这些问题扯皮了很久..</p></blockquote><blockquote><p>至于服务器,如果是在中国大陆境内的服务器不建议选择香港,博主在深圳ping HK的服务器延迟比JP的还高..</p></blockquote><p>等待客服批准,就可以开始配置了(</p><h2 id="配置BGP隧道广播"><a href="#配置BGP隧道广播" class="headerlink" title="配置BGP隧道广播"></a>配置BGP隧道广播</h2><p>总体来说,其实和上面的配置差不多,只不过要加一个建立隧道的过程(</p><p>当经过客服通过后,会看到下面的状态<br><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191106143512.png" alt></p><p>状态变成 <code>Available</code></p><p>点击 <code>Example Configurations</code> 复制一段 <code>net-tools</code>的配置到服务器,建立隧道</p><blockquote><p>由于博主是在阿里云上的CentOS7,默认IPv6是关闭的,还需要开启下系统的IPv6,编辑<code>/etc/sysctl.conf</code>(需要Root权限)</p></blockquote><pre><code>net.ipv6.conf.all.disable_ipv6 = 0net.ipv6.conf.default.disable_ipv6 = 0net.ipv6.conf.lo.disable_ipv6 = 0</code></pre><blockquote><p>保存,再运行 sysctl -p 的命令</p></blockquote><blockquote><p>参考:<a href="https://blog.csdn.net/ei__nino/article/details/71331717" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/ei__nino/article/details/71331717</a></p></blockquote><p>类似</p><pre><code class="bash">ifconfig sit0 upifconfig sit0 inet6 tunnel ::216.218.221.2ifconfig sit1 upifconfig sit1 inet6 add 2001:470:17:10e::2/64route -A inet6 add ::/0 dev sit1</code></pre><p>当隧道建立好后,<code>sit1</code>中可以看到建立隧道后自己的ip地址</p><blockquote><p>尝试 curl ipv6.ip.sb,若能访问则有了公网IPv6</p></blockquote><p>然后开始配置bird6,广播IP段</p><p>编辑<code>/etc/bird6.conf</code> 嘛,博主直接贴出自己的配置…</p><pre><code>protocol bgp he{        local as 208191;        source address 2001:470:17:10e::2;        import none;        export all;        graceful restart on;        multihop 2;        neighbor 2001:470:17:10e::1 as 6939;}</code></pre><p><code>source address</code>修改为 he.net 分配给的客户端ip</p><p><code>neighbor</code> 修改为 he.ne 给的服务器ip</p><p>然后就可以跳到上面Vultr <code>protocol static</code> 内容了(</p><blockquote><p>之后就一样了,检查配置,配置好后就能ping通自己的地址了</p></blockquote><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p><del>BGP坑就到这里,线路boy太难当了,之后再了解如何做Peer吧</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;接上篇BGP,这个时候已经拿下了自己ASN和IP,在RIPE中可以查询到,并且也添加了 &lt;code&gt;Route6&lt;/code&gt; 对象,接下来就把自己的IP广播出去….  &lt;/p&gt;
&lt;p&gt;在广播之前,需要寻找一家能为你做广播的电信运营商….Emm至少在国内是不可能了,不过还可
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Network" scheme="https://hex.moe/tags/Network/"/>
    
      <category term="BGP" scheme="https://hex.moe/tags/BGP/"/>
    
  </entry>
  
  <entry>
    <title>利用CloudFlare Api实现DDNS</title>
    <link href="https://hex.moe/p/aaafb04f/"/>
    <id>https://hex.moe/p/aaafb04f/</id>
    <published>2019-10-21T10:52:57.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现学校宿舍移动的宽带有 IPv6 就把吃灰的树莓派翻了出来,然后发现一个问题….IPv6太长了,所以就打算利用CloudFlare Api实现一个DDNS服务</p><h2 id="CloudFlare-Token"><a href="#CloudFlare-Token" class="headerlink" title="CloudFlare Token"></a>CloudFlare Token</h2><p>首先,获取你的 Token 博主偷懒直接选择了使用全局 Token(</p><p>进入 <code>Overview</code> 界面,可以在右下角找到 <code>Get your API token</code> 的链接</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191024223341.png" alt></p><p>点击 <code>Global API Key</code> 的 <code>View</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191024223556.png" alt></p><p>输入密码和验证码,即可获得 你的<code>Token</code></p><h2 id="CloudFlare-Api"><a href="#CloudFlare-Api" class="headerlink" title="CloudFlare Api"></a>CloudFlare Api</h2><blockquote><p><a href="https://api.cloudflare.com/#getting-started-requests" target="_blank" rel="external nofollow noopener noreferrer">https://api.cloudflare.com/#getting-started-requests</a></p></blockquote><p>有了 <code>Token</code> 首先先获取下基本信息</p><pre><code class="bash">curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$zone_ID&quot; \     -H &quot;Content-Type:application/json&quot; \     -H &quot;X-Auth-Key:1234567893feefc5f0q5000bfo0c38d90bbeb&quot; \     -H &quot;X-Auth-Email:example@example.com&quot;</code></pre><p>将其中的</p><ul><li><code>X-Auth-Email</code>的值换成登陆的邮箱</li><li><code>X-Auth-Key</code>的值更换为Token</li><li><code>zone ID</code> 换成查看到的zone ID</li></ul><blockquote><p><code>zone ID</code>可以在上面 <code>Global API Key</code> 上方看到</p></blockquote><p>执行此段shell脚本,可以看到账户的个人信息</p><h2 id="设置DNS"><a href="#设置DNS" class="headerlink" title="设置DNS"></a>设置DNS</h2><p>点击DNS,关于绑定 <code>Cloudflare nameservers</code> 就不详细介绍了,在购买域名服务商处将<code>NameServer/域名服务器</code></p><blockquote><p>博主下面演示的是绑定IPv6地址的脚本和操作,IPv4自行更换几个地方就好</p></blockquote><p>创建一个<code>AAAA</code>记录(这个是IPv6版本的<code>A</code>记录)</p><ul><li>Name处填入自己想要的二级域名,若填<code>@</code>符号则设置的是根域名</li><li><code>address</code>先随便填写一个</li></ul><p>最后将Cloudflare的代理 <code>Proxy</code> 关闭 <code>Save</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191024231252.png" alt></p><h2 id="使用API获取DNS记录的ID"><a href="#使用API获取DNS记录的ID" class="headerlink" title="使用API获取DNS记录的ID"></a>使用API获取DNS记录的ID</h2><p>使用以下脚本</p><pre><code class="bash">curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$zone_ID/dns_records&quot; \     -H &quot;Content-Type:application/json&quot; \     -H &quot;X-Auth-Key:1234567893feefc5f0q5000bfo0c38d90bbeb&quot; \     -H &quot;X-Auth-Email:example@example.com&quot;</code></pre><p>找到刚刚设置的域名ID</p><blockquote><p>如果太过凌乱可以将域名修改为<br><a href="https://api.cloudflare.com/client/v4/zones/$zone_ID/dns_records?type=AAAA&amp;name=刚刚设置的域名(记得写全)" target="_blank" rel="external nofollow noopener noreferrer">https://api.cloudflare.com/client/v4/zones/$zone_ID/dns_records?type=AAAA&amp;name=刚刚设置的域名(记得写全)</a></p></blockquote><blockquote><p>IPv4 <code>type</code> 修改为 <code>A</code></p></blockquote><h2 id="自动更新DNS记录"><a href="#自动更新DNS记录" class="headerlink" title="自动更新DNS记录"></a>自动更新DNS记录</h2><pre><code class="bash">$CURRENT_IP=$(curl -s ipv6.ip.sb)curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$zone_ID/dns_records/$dns_ID&quot; \     -H &quot;Content-Type:application/json&quot; \     -H &quot;X-Auth-Key:1234567893feefc5f0q5000bfo0c38d90bbeb&quot; \     -H &quot;X-Auth-Email:example@example.com&quot;     --data &#39;{&quot;type&quot;:&quot;AAAA&quot;,&quot;name&quot;:&quot;&#39;$DNS_RECORD&#39;&quot;,&quot;content&quot;:&quot;&#39;$CURRENT_IP&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false}&#39;</code></pre><ul><li>将<code>$dns_ID</code>修改为自己的dns ID</li><li><code>$DNS_RECORD</code>修改为自己的记录名称(写全/如:”test.hex.moe”)</li><li><code>$CURRENT_IP</code>修改为自己想使用的IP</li></ul><blockquote><p>IPv4 <code>type</code> 修改为 <code>A</code></p></blockquote><blockquote><p>在上面的代码中,我用了 ipv6.ip.sb 来获取自己的IPv6地址</p></blockquote><h2 id="设置crontab"><a href="#设置crontab" class="headerlink" title="设置crontab"></a>设置crontab</h2><pre><code class="bash">crontab -e</code></pre><p>添加一行</p><blockquote><p>*/1 * * * * /root/setDNS.sh</p></blockquote><p>一分钟执行一次 setDNS.sh (将后方的路径修改为自己的)</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>一分钟获取一次地址会不会太频繁了….之后考虑一下从本机读取吧…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近发现学校宿舍移动的宽带有 IPv6 就把吃灰的树莓派翻了出来,然后发现一个问题….IPv6太长了,所以就打算利用CloudFlare Api实现一个DDNS服务&lt;/p&gt;
&lt;h2 id=&quot;CloudFlare-Token&quot;&gt;&lt;a href=&quot;#CloudFlare-Tok
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Raspberry Pi" scheme="https://hex.moe/tags/Raspberry-Pi/"/>
    
  </entry>
  
  <entry>
    <title>年轻人的第一个私人BGP(一) - 注册一个ASN</title>
    <link href="https://hex.moe/p/c5ad0614/"/>
    <id>https://hex.moe/p/c5ad0614/</id>
    <published>2019-10-15T11:06:15.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>很久以前就有这一个想法了,拥有一个自己的私人ASN,经过了一个多月的研究,现在博主终于拥有了年轻人的第一个ASN和网络段(</p><blockquote><p><del>实名上网</del></p></blockquote><h2 id="0x00-介绍"><a href="#0x00-介绍" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h2><h3 id="BGP是什么"><a href="#BGP是什么" class="headerlink" title="BGP是什么"></a>BGP是什么</h3><blockquote><p>边界网关协议（英语：Border Gateway Protocol，缩写：BGP）是互联网上一个核心的去中心化自治路由协议。它通过维护IP路由表或‘前缀’表来实现自治系统（AS）之间的可达性，属于矢量路由协议</p></blockquote><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E8%BE%B9%E7%95%8C%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE" target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/%E8%BE%B9%E7%95%8C%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE</a></p></blockquote><h3 id="AS是什么"><a href="#AS是什么" class="headerlink" title="AS是什么"></a>AS是什么</h3><blockquote><p>自治系统（英文：Autonomous system, AS）是指在一个（有时是多个）实体管辖下的所有IP网络和路由器的全体，它们对互联网执行共同的路由策略。</p></blockquote><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E6%B2%BB%E7%B3%BB%E7%BB%9F" target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/%E8%87%AA%E6%B2%BB%E7%B3%BB%E7%BB%9F</a></p></blockquote><h3 id="RIR是什么"><a href="#RIR是什么" class="headerlink" title="RIR是什么"></a>RIR是什么</h3><blockquote><p>区域互联网注册机构（Regional Internet Registry，RIR），是管理世界上某特定地区Internet资源的组织。Internet资源包括IP地址（包含IPv4和IPv6）和使用在BGP路由中的自治系统号（Autonomous System number）。</p></blockquote><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9F%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%B3%A8%E5%86%8C%E7%AE%A1%E7%90%86%E6%9C%BA%E6%9E%84" target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9F%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%B3%A8%E5%86%8C%E7%AE%A1%E7%90%86%E6%9C%BA%E6%9E%84</a></p></blockquote><h2 id="0x01-开始"><a href="#0x01-开始" class="headerlink" title="0x01 开始"></a>0x01 开始</h2><p>想要拥有一个自己的BGP首先就需要有一个ASN,而注册ASN的一般流程是寻找APNIC,CNNIC等互联网注册管理机构注册会员然后申请,由于一般人不太可能注册这些机构的会员,加上注册这些会员的入会费也十分的昂贵</p><p><del>是APNIC还是CNNIC? 我记得入会费需要1w RMB左右</del></p><p>所以就需要寻求LIR来帮忙申请ASN了</p><blockquote><p>Local Internet registry (LIR) is an organization that has been allocated a block of IP addresses by a RIR, and that assigns most parts of this block to its own customers.</p></blockquote><p>总之…就是RIR的会员,可以寻找他们去代理注册ASN和租借IP</p><p>关于各大LIR的价格不均一,下面贴出国外<del>MJJ</del>论坛的一个帖子(</p><blockquote><p><a href="https://www.lowendtalk.com/discussion/114478/the-aio-ip-related-thread-ipv4-ipv6-asn-only-providers-are-allowed-to-post-offers" target="_blank" rel="external nofollow noopener noreferrer">https://www.lowendtalk.com/discussion/114478/the-aio-ip-related-thread-ipv4-ipv6-asn-only-providers-are-allowed-to-post-offers</a></p></blockquote><p>在这个贴子里可以看到一些LIR的ASN注册服务和租借IP的价格.</p><p>关于注册ASN,虽说原本是就近注册,管理你所在区域的RIR,例如中国就是属于APNIC的管辖范围</p><p>但是建议选择RIPE注册,因为RIPE注册可以自行在网页操作管理ASN和IP,若类似APNIC之类的修改信息还需要再次联系LIR</p><p>这里注册以RIPE为例子 <del>因为博主注册的就是RIPE</del></p><p>RIPE的注册类型分为两种:</p><ul><li>个人:需要护照、地址、手机号、邮箱等</li><li>公司:需要公司注册证书（营业执照）、地址、手机号、邮箱等</li></ul><p>注:未满十八岁注册需要监护人护照和监护人的同意书</p><p><strong>如果选择个人注册需要注意的一点是,个人类型注册的ASN在 bgp.he.net的<code>descr</code> 是你的将会是你的姓名!!!</strong></p><p><strong>如下:</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191017193320.png" alt></p><p><del>惨痛经历</del></p><p>如果注册类型是公司则<code>descr</code>是公司的名称</p><p>若实在不想挂个姓名在上面可以尝试以下两个方法:</p><ul><li>若是在校大学生可以申请校创业,还挺快的( 道听途说</li><li>可以<a href="https://yourcompanyformations.co.uk" target="_blank" rel="external nofollow noopener noreferrer">网上注册一个英国公司</a>带地址的那种</li></ul><p>由于博主没有注册过,所以无法分享经验,还请自行实践了(</p><p>另外RIPE还有有一些要求,需要在RIPE注册ASN需要提供在欧洲提供服务的证明</p><p>所以,想想如何忽悠就好(</p><p><del>博主开了个英国的机器萌混过关了</del></p><h2 id="0x02-注册RIPE账号和需要进行的操作"><a href="#0x02-注册RIPE账号和需要进行的操作" class="headerlink" title="0x02 注册RIPE账号和需要进行的操作"></a>0x02 注册RIPE账号和需要进行的操作</h2><p>这里引用一篇已经失联的夜空一篇文章</p><blockquote><p>存档: <a href="https://web.archive.org/web/20190227042014/https:/www.ykhut.com/archives/72/" target="_blank" rel="external nofollow noopener noreferrer">https://web.archive.org/web/20190227042014/https:/www.ykhut.com/archives/72/</a></p></blockquote><!-- 进入 https://access.ripe.net/registration 注册一个RIPE账号.(注册账号时需要填写下姓名,使用拼音就好了)然后从首页中进入我的资源``下面那个齿轮``![](https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191017195921.png)然后点击左侧的 `RIPE Database` - `Create an Object`选择 `role and maintainer pair` 点击 `Create` 按钮> 直达链接：https://apps.db.ripe.net/db-web-ui/#/webupdates/create/person/self> mntner: 维护者的字段名，纯英文，可包含"-"和"_"，建议格式为*-MNT，例如YekongTAT-MNTperson: 维护者的称呼，可以写全名或其他名称。可包含英文、数字和.`'_-address: 地址，phone: 手机号，建议格式为+国家区号.手机号，例如+86.16677778888 --><h2 id="0x03-寻找LIR购买并等待RIPE下发ASN"><a href="#0x03-寻找LIR购买并等待RIPE下发ASN" class="headerlink" title="0x03 寻找LIR购买并等待RIPE下发ASN"></a>0x03 寻找LIR购买并等待RIPE下发ASN</h2><p>向LIR购买代理注册ASN服务,并提交个人信息,护照照片等</p><p>和关于你RIPE账号的一些信息</p><p>期间可能RIPE会询问你一些问题</p><h2 id="0x04-END"><a href="#0x04-END" class="headerlink" title="0x04 END"></a>0x04 END</h2><p>之后再发一篇 注册RIPE账号和需要进行的操作 的详细介绍好了</p><p><del>其实上面已经很详细了</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久以前就有这一个想法了,拥有一个自己的私人ASN,经过了一个多月的研究,现在博主终于拥有了年轻人的第一个ASN和网络段(&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;实名上网&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-介绍&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Network" scheme="https://hex.moe/tags/Network/"/>
    
      <category term="BGP" scheme="https://hex.moe/tags/BGP/"/>
    
  </entry>
  
  <entry>
    <title>记一次修好VMware突然无法打开的问题</title>
    <link href="https://hex.moe/p/9a9f3c90/"/>
    <id>https://hex.moe/p/9a9f3c90/</id>
    <published>2019-10-12T12:05:02.000Z</published>
    <updated>2022-11-18T10:19:54.163Z</updated>
    
    <content type="html"><![CDATA[<p>今天Vmware Workstation突然就打不开了(</p><p>记一下症状和解决方法</p><h2 id="0x0-症状"><a href="#0x0-症状" class="headerlink" title="0x0 症状"></a>0x0 症状</h2><p>今晚打开Vmware Workstation时 突然间开不了了 Windows 的通知栏弹出如下图</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20191012200904.png" alt></p><h2 id="0x1-尝试解决"><a href="#0x1-尝试解决" class="headerlink" title="0x1 尝试解决"></a>0x1 尝试解决</h2><p>重启 无解</p><p>使用Vmware自带的修复 无解</p><p>使用旧版本Vmware 无解</p><h2 id="0x2-解决办法"><a href="#0x2-解决办法" class="headerlink" title="0x2 解决办法"></a>0x2 解决办法</h2><ul><li>卸载Vmware</li><li>打开<code>注册表(regedit)</code></li><li><code>搜索(Ctrl + F)</code> <code>VMware</code> 相关的项</li><li>删除相关项</li><li>重启</li><li>重新安装VMware</li></ul><h2 id="0x3-后记"><a href="#0x3-后记" class="headerlink" title="0x3 后记"></a>0x3 后记</h2><blockquote><p><del>绝对不是因为我不知道为什么怎么解决的但是我就是想水一篇文章然后写出来的</del></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天Vmware Workstation突然就打不开了(&lt;/p&gt;
&lt;p&gt;记一下症状和解决方法&lt;/p&gt;
&lt;h2 id=&quot;0x0-症状&quot;&gt;&lt;a href=&quot;#0x0-症状&quot; class=&quot;headerlink&quot; title=&quot;0x0 症状&quot;&gt;&lt;/a&gt;0x0 症状&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Virtualization" scheme="https://hex.moe/tags/Virtualization/"/>
    
  </entry>
  
  <entry>
    <title>大学入学一个月总结</title>
    <link href="https://hex.moe/p/18b00e4c/"/>
    <id>https://hex.moe/p/18b00e4c/</id>
    <published>2019-09-28T15:30:57.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>大学开学已经有一个月了,半夜自闭蒟蒻来写下总结.</p><h2 id="0x0-入学"><a href="#0x0-入学" class="headerlink" title="0x0 入学"></a>0x0 入学</h2><p>没有达到某乎平均水准,来了深圳某大专,开学感觉挺好的,课程也挺少的,但是接下来就是一堆一堆活动活动还有活动,感觉就是 <strong>十分的忙</strong>.</p><p>然后就是学校的建筑风格,理工科的校区和文科的校区真的不一样.<br>理科就和工厂一样,文科才是真正大学的样子(<br><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190929000344.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190928234929.png" alt></p><p><del>每次活动开起来午饭都没得吃</del></p><h2 id="0x1-深圳"><a href="#0x1-深圳" class="headerlink" title="0x1 深圳"></a>0x1 深圳</h2><p>入学后第一件事情就是实现之前的想法,逛一遍深圳.</p><p>第一个星期去了东门,老街,华强北,华强北感觉没有说的那么厉害了,都是在卖手机壳偏多,某位同学和我说是被整治了(</p><p>华强北买了个估计山寨的SD卡 32G RMB -17</p><p>后面逛了个小的动漫城,虽然挺小的但是气氛挺好.本来买了个画框,但是在过地铁安检时我手滑了啊啊啊(</p><p>后面就到了这几天(2019-9-25) 去了一趟一直都很想去的 深圳湾 感觉并没有这么震撼,估计是我选的地方不对,但是还是很好看的.</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190929001138.jpg" alt></p><p>后面一路骑车骑到了科技园,体验了下无人超市,未来的感觉,全自动的售货,熟食也不在话下(</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190929001446.jpg" alt></p><h2 id="0x2-选择"><a href="#0x2-选择" class="headerlink" title="0x2 选择"></a>0x2 选择</h2><p>大学开学过了两个星期后,开始有了空余的时间.打算给自己找点事情干,准备参加技术性的社团和比赛.</p><p>经过师兄的推荐去了解算法竞赛,蓝桥杯之类的,当然自己还是对信息安全这方面比较感兴趣,所以在算法比赛和信息安全这两方比较难以选择.</p><p>由于信息安全的社团招新并不着急,我提前去上门了解后学长们说有基础的话来十月打下新生杯就好了.</p><p>算法方面比较的着急,但是去报名面试后就没有了解过了,某天了解起来后发现模拟赛已经比赛了两场…</p><h2 id="0x3-自闭"><a href="#0x3-自闭" class="headerlink" title="0x3 自闭"></a>0x3 自闭</h2><p>之后学长给我了一个要求 洛谷上的题目刷够三十题就够格了,那一天是难忘的一天,一个下午刷出了三十题,刷完后还是感觉对不是很有兴趣,后面两模拟赛自闭有了基础</p><p>一个下午刷完后晚上就开始参加模拟赛,第一次模拟赛我的成绩也比较好,但是实在是挺痛苦的,想题的时候,<del>原来当程序员是真的回掉头发的</del></p><p>随后两次逐渐状态愈发下降,在这一个月中感冒了两次,发烧了一次<del>现在还在感冒中</del>,本来身体并不是很好加上频繁的模拟赛导致了没有多余的时间去看书学习,在多方权衡后选择了放弃…<del>但是说放弃也有点放不下,时间会说明一切</del></p><h2 id="0x4-总结"><a href="#0x4-总结" class="headerlink" title="0x4 总结"></a>0x4 总结</h2><p>进入大学开始比拼的并不是只有了学习成绩,开始了多维度的较量,别人的经验不可复刻,哪种是最优解哪种是适合自己的,在这一个月我在一直思考也没有想出一个好的答案…</p><p>深圳很美,来到深圳并不是一眼就是震撼的感觉,却是在点点滴滴中改变着你,我觉得在深圳呆久了,可能就回不去了..</p><p>闲话很多,这篇是在一个自闭的晚上写出的水文,也是对自己目前一个月经历的记录,总之目前先向着自己感兴趣的方向前进吧..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大学开学已经有一个月了,半夜自闭蒟蒻来写下总结.&lt;/p&gt;
&lt;h2 id=&quot;0x0-入学&quot;&gt;&lt;a href=&quot;#0x0-入学&quot; class=&quot;headerlink&quot; title=&quot;0x0 入学&quot;&gt;&lt;/a&gt;0x0 入学&lt;/h2&gt;&lt;p&gt;没有达到某乎平均水准,来了深圳某大专,开学感
      
    
    </summary>
    
    
      <category term="日常" scheme="https://hex.moe/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>cpp学习笔记(scanf与getline)</title>
    <link href="https://hex.moe/p/a8715418/"/>
    <id>https://hex.moe/p/a8715418/</id>
    <published>2019-09-17T08:26:17.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>蒟蒻萌新的 C 与 C++学习笔记.</p></blockquote><blockquote><p><strong>任何一个伟大的目标,都有一个微不足道的开始.</strong> —— 洛谷</p></blockquote><blockquote><p>最近在学习一些 OI 的知识，其实以前是学过 C++的但是, <del>Python 实在是太香了</del><br>由于太久没用过全部白给了，但是由于了解到比赛 C++可以用 STL <del>真香</del><br>所以开了一个从 C 转换到 C++的一些笔记. <del>天坑</del> &gt; <del>什么时候支持 C++11</del></p></blockquote><h2 id="从-scanf-到-cin-到-getline"><a href="#从-scanf-到-cin-到-getline" class="headerlink" title="从 scanf 到 cin 到 getline"></a>从 scanf 到 cin 到 getline</h2><p>之前习惯使用 scanf 来某些格式化的输入 如<br><a href="https://vjudge.net/problem/HDU-2005" target="_blank" rel="external nofollow noopener noreferrer">https://vjudge.net/problem/HDU-2005</a></p><p>可以通过</p><pre><code class="c">scanf(&quot;%d/%d/%d&quot;,&amp;year,&amp;month,&amp;day);</code></pre><p>分割输入</p><p>转换到 C++时 当然是要使用 STL 辣</p><p>但是似乎没有类似</p><blockquote><p>cin&gt;&gt;year&gt;&gt;month&gt;&gt;day</p></blockquote><p>的操作,后面找到了一个代替方案</p><blockquote><p>std::getline()</p></blockquote><p>getline 有四个重载 其中</p><pre><code class="cpp">template&lt;class _Elem,    class _Traits,    class _Alloc&gt; inline    basic_istream&lt;_Elem, _Traits&gt;&amp; getline(        basic_istream&lt;_Elem, _Traits&gt;&amp; _Istr,        basic_string&lt;_Elem, _Traits, _Alloc&gt;&amp; _Str,        const _Elem _Delim)        {        // get characters into string, discard delimiter        return (getline(_STD move(_Istr), _Str, _Delim);        }</code></pre><p>这个方法可以设置结束符号</p><p>还是与HDU-2005为例子</p><blockquote><p>1985/1/20</p></blockquote><pre><code class="cpp">    std::string year;    std::string month;    std::string day;    while (std::getline(std::cin, year, &#39;/&#39;))    {        std::getline(std::cin, month, &#39;/&#39;);        std::getline(std::cin, day, &#39;/&#39;);    }</code></pre><p>这样就可以获取到三个值了</p><p>总感觉有点怪怪的,应该有更好的方法我不知道吧,各位dalao评论区请</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;蒟蒻萌新的 C 与 C++学习笔记.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;任何一个伟大的目标,都有一个微不足道的开始.&lt;/strong&gt; —— 洛谷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockq
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="C" scheme="https://hex.moe/tags/C/"/>
    
      <category term="C++" scheme="https://hex.moe/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>按名字判断班级小姐姐的数量</title>
    <link href="https://hex.moe/p/f20b6b14/"/>
    <id>https://hex.moe/p/f20b6b14/</id>
    <published>2019-08-29T11:22:48.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大学快要开学了,我通过py关系弄到了一份班级的列表,但是没有性别,正好这几天看到一个通过名字猜测性别的库</p></blockquote><h1 id="通过姓名猜测性别"><a href="#通过姓名猜测性别" class="headerlink" title="通过姓名猜测性别"></a>通过姓名猜测性别</h1><blockquote><p><a href="https://github.com/observerss/ngender" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/observerss/ngender</a></p></blockquote><p>在最近,发现了一个<code>ngender</code>库,作用只有一个 通过姓名猜测性别,使用方式也很简单</p><blockquote><p>pip install ngender</p></blockquote><pre><code class="python">&gt;&gt;&gt; import ngender&gt;&gt;&gt; ngender.guess(&#39;赵本山&#39;)(&#39;male&#39;, 0.9836229687547046)&gt;&gt;&gt; ngender.guess(&#39;宋丹丹&#39;)(&#39;female&#39;, 0.9759486128949907)</code></pre><h1 id="开始实践想法"><a href="#开始实践想法" class="headerlink" title="开始实践想法"></a>开始实践想法</h1><h2 id="xls转csv"><a href="#xls转csv" class="headerlink" title="xls转csv"></a>xls转csv</h2><p>首先通过Excel将<code>.xls</code>文件另存为 CSV 文件,因为Python自带CSV库,操作起来比操作xls文件简单(</p><blockquote><p>逗号分隔值（Comma-Separated Values，CSV，有时也称为字符分隔值，因为分隔字符也可以不是逗号），其文件以纯文本形式存储表格数据（数字和文本）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190829193024.png" alt></p><p>source大概长这样</p><h2 id="转化为CSV后开始写代码"><a href="#转化为CSV后开始写代码" class="headerlink" title="转化为CSV后开始写代码"></a>转化为CSV后开始写代码</h2><pre><code class="python">import csvimport ngendernew_csv = []with open(&#39;list.csv&#39;,&#39;r&#39;,encoding=&#39;utf-8&#39;) as f:    reader = csv.reader(f)    next(reader)    for row in reader:        guess = ngender.guess(row[2])        row.append(guess[0])        row.append(round(guess[1]*100,3))        new_csv.append(row)with open(&#39;test.csv&#39;,&#39;w&#39;,newline=&#39;&#39;)as f:    f_csv = csv.writer(f)    f_csv.writerows(new_csv)</code></pre><h2 id="遇到的两个坑"><a href="#遇到的两个坑" class="headerlink" title="遇到的两个坑"></a>遇到的两个坑</h2><ul><li><strong><code>open</code>的编码格式</strong><br>Excel转的CSV是UTF-8编码的,<del>众所周知</del> Python在中文Windows系统下的默认编码是GBK 所以<code>open</code>的时候要加上<code>encoding=&#39;utf-8&#39;</code></li><li><strong>保存时的默认新行</strong><br>保存的结果每一行都会多一行,将<code>newline</code>设置为空字符串就好了</li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>打开保存好的Excel,简单排序一下</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190829193849.png" alt></p><p>完</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>根据判断我们班有9个小姐姐,后面去问了下辅导员,实际上是八个,误差不大(</p><p>接下来可能没时间搞这些了,开学还要考英语,几个月没碰过全白给了,呜呜呜</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;大学快要开学了,我通过py关系弄到了一份班级的列表,但是没有性别,正好这几天看到一个通过名字猜测性别的库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;通过姓名猜测性别&quot;&gt;&lt;a href=&quot;#通过姓名猜测性别&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Python" scheme="https://hex.moe/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫练习</title>
    <link href="https://hex.moe/p/ab67235a/"/>
    <id>https://hex.moe/p/ab67235a/</id>
    <published>2019-08-25T04:18:41.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近感觉没什么好写的,把以前练习Python写的东西记录一下.关于SadPanda和某泥潭的.<br>没啥技术含量(</p></blockquote><h2 id="Stage1st挂机脚本"><a href="#Stage1st挂机脚本" class="headerlink" title="Stage1st挂机脚本"></a>Stage1st挂机脚本</h2><blockquote><p>某知名 <del>巨魔钓鱼</del> 泥潭需要访问几十个小时才能升级加权限,又刚好有闲置的服务器,所以想想办法实现挂机功能</p></blockquote><p>科技就是力量,分析是如何判断登陆的</p><p>打开 <code>Edit This Cookie</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190827144046.png" alt></p><p>Emm Cookie有点多,不管了 先全部复制进去尝试一下</p><p>用<code>requests</code>跑下结果是能用的,登陆状态正常</p><p>但是,得分析下哪个Cookie才是真正的身份信息</p><p>像一些<code>lastact</code>看起来就没什么用</p><p>笨方法,虽然<code>cookie</code>多但是也不是很多</p><p>逐个删除,当删了<code>auth</code>后登陆掉了,留下<code>auth</code>,继续操作</p><p>发现登陆身份信息判断是用 <code>auth</code>和 <code>slatkey</code> 判断的</p><p>request一把梭</p><pre><code class="python">import requestsimport timeimport randomerror=0while 1:    cookie = {    &#39;B7Y9_2132_auth&#39;:&#39;This is your auth&#39;,    &#39;B7Y9_2132_saltkey&#39;:&#39;This is your slatkey&#39;}    try:        res = requests.get(&#39;https://bbs.saraba1st.com/2b/forum-75-1.html&#39;,cookies=cookie)        now = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())    except:        time.sleep(60)    if res.text.find(&#39;Aisina&#39;) != -1:        print(&#39;[&#39;+now+&#39;] &#39;+&#39;Logined&#39;)        time.sleep(random.randint(120,480))        if error!=0:            error=0    else:        print(&#39;[&#39;+now+&#39;] &#39;+&#39;Login failed!&#39;)        error=error+1        time.sleep(300)        if error&gt;=3:            break</code></pre><blockquote><p><a href="https://github.com/LovelyWei/stage1stKeepLogin" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/LovelyWei/stage1stKeepLogin</a></p></blockquote><p>加点random和等候时间,防止被防火墙拦了</p><p>测试有效,完</p><h2 id="获取SadPanda收藏的磁力链接"><a href="#获取SadPanda收藏的磁力链接" class="headerlink" title="获取SadPanda收藏的磁力链接"></a>获取SadPanda收藏的磁力链接</h2><blockquote><p>这个项目当时是Ex要倒闭的时候为了抢救下我的收藏写下的(</p></blockquote><p>首先判断Ex是什么方式获取数据的,按下F12,发现是服务端渲染,所以我使用了bs4来解析html数据</p><p>先填入 <code>cookie</code> 上<code>requests</code>测试,发现登陆成功</p><p>然后就是获取收藏列表里的本子有没有磁力,之前Ex改版过一次,有磁力的在评分右边会有一个绿色的下载箭头</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190827145816.png" alt></p><p>通过这个判断是否有磁力链接,对比两个元素发现可以下载的有<code>title=&quot;Show torrents&quot;</code>不能下载的是 <code>title=&quot;No torrents available&quot;</code></p><p>bs4 解析搜索获取到下载页面</p><p>进入到了下载页面本来想的是做下载种子的,结果发现下载链接长这样</p><blockquote><p><a href="https://sadpanda.org/torrent/1472720/9f195ee0788a64322c2f04e3a608a991cb1f10f.torrent" target="_blank" rel="external nofollow noopener noreferrer">https://sadpanda.org/torrent/1472720/9f195ee0788a64322c2f04e3a608a991cb1f10f.torrent</a></p></blockquote><p>后面那个明显是磁力链接,所以用 <del>正则匹配一下</del> 用了<code>os.path.splitext</code>和<code>os.path.basename</code>截取下文件名</p><p>由于当时赶时间就直接使用print输出了</p><p>(后面有加了个多线程</p><pre><code class="python">import requestsfrom bs4 import BeautifulSoupimport timeimport osimport threadingheader={&#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36&#39;,&#39;Cookie&#39;:&#39;THIS IS YOUR COOKIE&#39;}def getPage(url,header,page=0):    while 1:        try:            ret = requests.get(url+&#39;?page=&#39;+str(page),headers=header)            ret.encoding = ret.apparent_encoding            if ret.status_code != 200:                time.sleep(0.3)            else:                return ret        except:            time.sleep(0.3)def getList(header,i):    subRes = getPage(&#39;https://exhentai.org/favorites.php&#39;,header,i)    subSoup = BeautifulSoup(subRes.text,&#39;lxml&#39;)    findArrary = subSoup.find_all(title=&quot;Show torrents&quot;)    for r in findArrary:        threading.Thread(target=getMagnet,args=(r.parent[&#39;href&#39;],header,)).start()def getMagnet(url,header):    while 1:        try:            ret = requests.get(url,headers=header)            if ret.status_code != 200:                time.sleep(0.3)            else:                soup = BeautifulSoup(ret.text,&#39;lxml&#39;)                link = soup.form.a                print(&#39;magnet:?xt=urn:btih:&#39;+os.path.splitext(os.path.basename(link[&#39;href&#39;]))[0].upper()+&quot;\t&quot;+link.text)                return        except:            time.sleep(0.3)res = getPage(&#39;https://exhentai.org/favorites.php&#39;,header)soup = BeautifulSoup(res.text,&#39;lxml&#39;)page = int(soup.find(class_=&quot;ptt&quot;).find_all(&#39;a&#39;)[-2].text)print(&quot;Page:&quot;+str(page))for i in range(0,page):    threading.Thread(target=getList,args=(header,i,)).start()</code></pre><blockquote><p><a href="https://github.com/LovelyWei/EhMagnet" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/LovelyWei/EhMagnet</a></p></blockquote><p>测试能用,完</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;最近感觉没什么好写的,把以前练习Python写的东西记录一下.关于SadPanda和某泥潭的.&lt;br&gt;没啥技术含量(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Stage1st挂机脚本&quot;&gt;&lt;a href=&quot;#Stage1st挂机脚本&quot; c
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Python" scheme="https://hex.moe/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>再次重建博客(建立一个Hexo博客)</title>
    <link href="https://hex.moe/p/9b3fb8b9/"/>
    <id>https://hex.moe/p/9b3fb8b9/</id>
    <published>2019-08-24T06:24:36.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;关于我博客又丢档案了这件事&gt;</p><a id="more"></a><p>时隔 <del>多年</del> 几个月 我突然发现好像有个博客已经吃灰很久了,开始想更新下内容,结果发现又又又 <del>丢人</del> 丢档了(Hexo博客的源文件丢了)</p><h2 id="这篇文章就讲下重建博客的时候干的一些事情吧"><a href="#这篇文章就讲下重建博客的时候干的一些事情吧" class="headerlink" title="这篇文章就讲下重建博客的时候干的一些事情吧."></a>这篇文章就讲下重建博客的时候干的一些事情吧.</h2><blockquote><p>同时也是一个教萌新搭建博客的教程</p></blockquote><h3 id="1-装Hexo"><a href="#1-装Hexo" class="headerlink" title="1. 装Hexo"></a>1. 装Hexo</h3><p>首先Node Js 肯定是必须的</p><p><a href="https://nodejs.org/en/" target="_blank" rel="external nofollow noopener noreferrer">NodeJs官网</a></p><p>下载其中任意一个版本安装,装好后在命令行中敲</p><blockquote><p>npm version</p></blockquote><p>会看到 NodeJs的版本 如:</p><pre><code class="json">{ npm: &#39;6.5.0&#39;,  ares: &#39;1.15.0&#39;,  brotli: &#39;1.0.7&#39;,  cldr: &#39;34.0&#39;,  http_parser: &#39;2.8.0&#39;,  icu: &#39;63.1&#39;,  llhttp: &#39;1.0.1&#39;,  modules: &#39;67&#39;,  napi: &#39;4&#39;,  nghttp2: &#39;1.34.0&#39;,  node: &#39;11.8.0&#39;,  openssl: &#39;1.1.0j&#39;,  tz: &#39;2018e&#39;,  unicode: &#39;11.0&#39;,  uv: &#39;1.25.0&#39;,  v8: &#39;7.0.276.38-node.16&#39;,  zlib: &#39;1.2.11&#39; }</code></pre><p>接下来安装</p><p><a href="https://git-scm.com/" target="_blank" rel="external nofollow noopener noreferrer">Git</a></p><p>关于Git就不再多做介绍了,安装的方法可以在网上搜索到</p><p>Git安装完后</p><p>接下来可以开始安装Hexo了.</p><p>不过 在这之前,由于国内网络的种种原因,先在安装之前调整一些配置</p><p>调整npm的源为淘宝镜像</p><blockquote><p>npm config set registry <a href="http://registry.npm.taobao.org/" target="_blank" rel="external nofollow noopener noreferrer">http://registry.npm.taobao.org/</a></p></blockquote><p>为Git设置代理(可选,<strong>如果你不知道这里在设置什么就不用设置了</strong>)</p><blockquote><p>git config –global http.proxy ‘socks5://127.0.0.1:1080’<br>git config –global https.proxy ‘socks5://127.0.0.1:1080’</p></blockquote><p>接下来就可以正式开始安装Hexo了</p><p>先下载Hexo程序</p><blockquote><p>npm install hexo-cli -g</p></blockquote><p>接下来,打开命令行到你想安装博客的目录,运行</p><blockquote><p>hexo init</p></blockquote><p>就开始自动化的初始化Hexo了</p><p>初始化结束后会看到目录结构如下</p><pre><code>Mode                LastWriteTime         Length Name----                -------------         ------ ----d-----        2019/8/21     13:53                node_modulesd-----        2019/8/21      1:25                scaffoldsd-----        2019/8/21     14:23                sourced-----        2019/8/21     13:16                themes-a----        2019/8/21      1:25             71 .gitignore-a----        2019/8/21     15:02          64543 db.json-a----        2019/8/21     13:53         135764 package-lock.json-a----        2019/8/21     13:53            629 package.json-a----        2019/8/21     14:17           1962 _config.yml</code></pre><p>接下来运行</p><blockquote><p>hexo server</p></blockquote><p>会见到类似</p><pre><code>INFO  Start processingINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><p>此时打开 <a href="https://localhost:4000" target="_blank" rel="external nofollow noopener noreferrer">https://localhost:4000</a> 就能看到一个新的博客了<br>(因每个人的环境不同所以地址可能有出入,以命令行显示的为准<br>)</p><p>打开网址见到Hello World 安装Hexo就结束了</p><h3 id="2-安装-Material-主题"><a href="#2-安装-Material-主题" class="headerlink" title="2. 安装 Material 主题"></a>2. 安装 Material 主题</h3><p>安装好博客后可以自行安装主题来美化博客,我选了Material 感觉这个主题的简约风格挺好看的</p><blockquote><p>可以选择自己喜欢的主题 大体安装方式都类似</p></blockquote><p>打开 <a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/viosey/hexo-theme-material</a></p><p>点击 Release 下载 1.5.2 的版本</p><blockquote><p>新版本的我安装了报错,不知道为什么 2019-9-21</p></blockquote><p>下载完成后打开压缩包将其中的文件夹解压至 /themes</p><p>将解压的文件夹名称修改为 material</p><p>进入 material文件夹 将 <code>_config.template.yml</code> 文件重命名为 <code>_config.yml</code></p><p>回到博客根目录 打开博客根目录的配置文件 <code>_config.yml</code> 将其中 <code>theme</code> 值修改为 <code>theme: material</code></p><p>重新运行 <code>hexo s</code> 可以看到主题已经安装成功了</p><h3 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3. 安装插件"></a>3. 安装插件</h3><p>虽然Hexo已经集成了许多东西,但是我觉得还是缺了点什么,例如文章的URL不是很好之类,我选择安装了</p><h4 id="A-URL永久化"><a href="#A-URL永久化" class="headerlink" title="A. URL永久化"></a>A. URL永久化</h4><blockquote><p>Hexo安装完成发表文章的时URL看起来不美观,特别是标题是中文时,URL直接就写上了中文URL,不利于SEO,所以得想优化下URL.</p></blockquote><p>后面选择了 <code>hexo-abbrlink</code> 这个插件,这个插件可以在你让你的文章获得唯一的 ID.</p><p>在接下来的设置中就可以将URL设置为例如 <code>http://example.com/p/:UID/</code></p><p>操作方式如下:</p><p>安装 <a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="external nofollow noopener noreferrer">hexo-abbrlink</a>,在网页根目录下插入</p><blockquote><p>npm install hexo-abbrlink –save</p></blockquote><p>接下调整博客的配置<code>_config.yml</code>(根目录下的,不是主题那个),在配置中添加</p><pre><code class="yaml">abbrlink:  alg: crc32  # 算法：crc16(default) and crc32  rep: hex    # 进制：dec(default) and hex</code></pre><p>然后修改<code>permalink</code>如</p><pre><code class="yaml">permalink: p/:abbrlink/</code></pre><p>运行</p><blockquote><p>hexo server</p></blockquote><p>可以看到文章的链接变成了</p><blockquote><p><a href="http://localhost:4000/p/9b3fb8b9/" target="_blank" rel="external nofollow noopener noreferrer">http://localhost:4000/p/9b3fb8b9/</a></p></blockquote><h4 id="B-为网站添加RSS订阅"><a href="#B-为网站添加RSS订阅" class="headerlink" title="B. 为网站添加RSS订阅"></a>B. 为网站添加RSS订阅</h4><blockquote><p>虽然9012了,但是还是有许多人喜欢RSS的方式阅读信息,加上最近也多了一些好用的RSS阅读器</p></blockquote><p>所以决定还是弄上RSS,<del>反正也很简单</del></p><p>首先到博客的根目录运行</p><blockquote><p>npm install hexo-generator-feed –save</p></blockquote><p>安装完成后我们开始修改根目录下的配置文件<code>_config.yml</code>加入</p><pre><code class="yaml">feed:  type: atom  path: atom.xml  limit: 20</code></pre><p>接下来到主题目录下的<code>_config.yml</code> 将<code>rss</code>设置如</p><pre><code class="yml">rss: /atom.xml</code></pre><p>运行本地服务</p><blockquote><p>hexo s</p></blockquote><p>打开</p><blockquote><p><a href="http://localhost:4000/atom.xml" target="_blank" rel="external nofollow noopener noreferrer">http://localhost:4000/atom.xml</a></p></blockquote><p>可以看到RSS xml已经有了.</p><h4 id="C-给网站添加sitemap-xml"><a href="#C-给网站添加sitemap-xml" class="headerlink" title="C. 给网站添加sitemap.xml"></a>C. 给网站添加sitemap.xml</h4><blockquote><p>虽然这个网站现在没有什么干活,但是SEO还是要做一下的.</p></blockquote><p>其实添加sitemap也很简单</p><blockquote><p>npm install hexo-generator-sitemap<br>npm install hexo-generator-sitemap –save-dev<br>npm install hexo-generator-baidu-sitemap –save-dev</p></blockquote><p>然后就可以放着不管了,当然你也可以想搜索引擎主动的提交你的sitemap.</p><h3 id="4-发布到-github-io"><a href="#4-发布到-github-io" class="headerlink" title="4. 发布到 github.io"></a>4. 发布到 github.io</h3><blockquote><p>按照传统的方式建立一个网站是要有一个服务器的,但是github有一个服务可以直接挂上你的静态网站,这就是github.io 这也是我选择hexo的原因 <del>能白嫖</del></p></blockquote><p>首先需要建立一个github账号 这点不详细阐述了</p><p>创建好github账号后开始新建一个仓库(repository)</p><p>仓库的名字命名为你的 <code>ID.github.io</code></p><blockquote><p>以我为例 我的github地址 <a href="https://github.com/LovelyWei" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/LovelyWei</a><br>创建仓库的时候就创建为 <code>LovelyWei.github.io</code></p></blockquote><p>接下来不用调整什么 直接确定就能建立好一个仓库了</p><p>建立好仓库后开始配置Hexo 让Hexo能推送到Github仓库</p><p>先安装<code>hexo-deployer-git</code></p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p>安装好后打开根目录的配置文件 <code>_config.yml</code></p><p>配置<code>deploy</code>选项如</p><pre><code class="yml">deploy:  type: git  repo: https://github.com/LovelyWei/LovelyWei.github.io.git  branch: master</code></pre><p><code>repo</code>处的值修改为你的推送地址</p><p>接下来尝试</p><blockquote><p>hexo g<br>hexo d</p></blockquote><p>中间可能需要你输入你的Github账号和密码,上传完成后就能看到仓库里已经有静态文件了</p><p>访问github.io网址就能看到blog了</p><blockquote><p><a href="https://lovelywei.github.io/" target="_blank" rel="external nofollow noopener noreferrer">https://lovelywei.github.io/</a></p></blockquote><h3 id="5-博客绑定域名"><a href="#5-博客绑定域名" class="headerlink" title="5. 博客绑定域名"></a>5. 博客绑定域名</h3><blockquote><p>挂着xxx.github.io 似乎不是那么的好看,我自己又去买了一个域名,用自己的域名访问会更加个性一点?</p></blockquote><p>在购买域名的服务商上设置到ID.github.io的别名,如</p><pre><code>CNAME @ LovelyWei.github.io</code></pre><p>设置好后在 <code>source</code> 文件夹中新建<code>CNAME</code>文件,里面写上你设置的域名如</p><pre><code>hex.moe</code></pre><p>若你设置的别名是带了<code>www</code>之类的,如</p><pre><code>CNAME www LovelyWei.github.io</code></pre><p><code>CNAME</code>文件中的内容就要修改为</p><pre><code>www.hex.moe</code></pre><p>重新发布</p><blockquote><p>hexo cl<br>hexo g<br>hexo d</p></blockquote><p>等待数分钟后访问网址(如 <a href="http://hex.moe">http://hex.moe</a> ),就能看到博客了</p><p>完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;关于我博客又丢档案了这件事&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Hexo" scheme="https://hex.moe/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用Github来当博客图床</title>
    <link href="https://hex.moe/p/ee3454a2/"/>
    <id>https://hex.moe/p/ee3454a2/</id>
    <published>2019-08-24T05:44:09.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前试过 sm.ms 觉得还不错,不过最近发现这个图床处于墙与不墙的薛定谔状态,而且也不是很好留档,所以决定使用Github来当作博客的图床</p></blockquote><h1 id="一个图床软件-PicGo"><a href="#一个图床软件-PicGo" class="headerlink" title="一个图床软件 PicGo"></a>一个图床软件 PicGo</h1><h2 id="下载-PicGo"><a href="#下载-PicGo" class="headerlink" title="下载 PicGo"></a>下载 PicGo</h2><p>在这里</p><blockquote><p><a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Molunerfinn/PicGo/releases</a></p></blockquote><p>可以下载到PicGo的安装包</p><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>首先 新建一个仓库 名字随意</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824135003.png" alt></p><p>不用修改任何配置 创建</p><p>创建完成后点击 <code>头像</code> 进入我的 <code>Settings</code> 点击 <code>Developer settings</code> 点击 <code>Personal access tokens</code></p><blockquote><p>点击这里可以直接进入: <a href="https://github.com/settings/tokens" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/settings/tokens</a></p></blockquote><p>新建一个 <code>token</code> 点击 <code>Generate new token</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824135507.png" alt></p><p><code>Note</code> 处填入名字 勾选 <code>repo</code> 让其有仓库管理权限 然后即可 点击<code>Generate token</code> 新建 <code>token</code></p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824135716.png" alt></p><p>如图所示</p><p>复制下 <code>token</code> 的值</p><p>打开 <code>PicGo</code> 软件</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824135856.png" alt></p><p>点击Github设置</p><p>设定仓库名设置为 <code>用户名/仓库名</code></p><p>设定分支名设置为 <code>master</code></p><p>设定Token设置为你刚刚复制下的Token</p><p>设为默认图床 点击确定</p><p>回到上传区 尝试上传图片 图片上传成功后 会自动将Markdown格式的图片链接放在你的剪贴板</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824140141.png" alt></p><p>完</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前试过 sm.ms 觉得还不错,不过最近发现这个图床处于墙与不墙的薛定谔状态,而且也不是很好留档,所以决定使用Github来当作博客的图床&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一个图床软件-PicGo&quot;&gt;&lt;a href=&quot;#一个图
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Hexo" scheme="https://hex.moe/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>为Hexo博客配置上HTTPS</title>
    <link href="https://hex.moe/p/f17d42de/"/>
    <id>https://hex.moe/p/f17d42de/</id>
    <published>2019-08-24T03:30:39.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>9012年了,Chrome纷纷给各种HTTP网站打上不安全,由于我用了自定义域名,所以并没有小绿锁,为了”安全”一点,把博客也加上小绿锁好了</p></blockquote><h1 id="为博客添加HTTPS"><a href="#为博客添加HTTPS" class="headerlink" title="为博客添加HTTPS"></a>为博客添加HTTPS</h1><h2 id="方案一-Github-Page-自带的证书"><a href="#方案一-Github-Page-自带的证书" class="headerlink" title="方案一 Github Page 自带的证书"></a>方案一 Github Page 自带的证书</h2><p>在去年六月,Github宣布支持自定义域的HTTPS了,下面来讲讲如何配置</p><h3 id="首先到的域名提供商处修改的记录"><a href="#首先到的域名提供商处修改的记录" class="headerlink" title="首先到的域名提供商处修改的记录"></a>首先到的域名提供商处修改的记录</h3><p>Github称,如果需要为自定义域加上HTTPS,域名需要设置为A记录并指向下面几个地址其中一个 (<del>不要问我为什么</del>)</p><blockquote><p>185.199.108.153<br>185.199.109.153<br>185.199.110.153<br>185.199.111.153</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824120540.png" alt><br>类似这样 (我其实设置的是@ 帮我显示成了域名)</p><p>如果域名设置为CNAME的话,证书到期了无法自动续签 (没错 Github使用的是Let’s Encrypt的证书)</p><p>网上搜索了相关案例,这是案例中客服的回复</p><blockquote><p>Hello,<br>Thanks for writing in! I took a look and it appears that your custom domain is set up using a CNAME record. You’ll need to make some changes to your DNS settings before we’ll be able to renew the HTTPS certificate for your custom domain.<br>You’ll need to remove your existing CNAME record, and replace it with at least one A record that points to one of the following IP addresses:<br>185.199.108.153<br>185.199.109.153<br>185.199.110.153<br>185.199.111.153<br>Optionally, you can create additional A records that point to the other IP addresses from the list. Additional records essentially act as a backup in case of DNS or CDN issues, so having at least two is best practice, though your site will still function with just one.<br>Once you’ve replaced the CNAME record, you’ll need to visit your repository’s settings page, remove your custom domain and click save, then re-add it again. This will kick off the process of provisioning an HTTPS certificate for your domain name.<br>Once your certificate has been provisioned, you’ll then be able to enforce HTTPS by checking the “Enforce HTTPS” checkbox.<br>Bear in mind that it can take up for 24 hours for DNS changes to take full effect, and up to an hour for an HTTPS certificate to be requested, so if you follow these steps but are still having trouble, that’s usually why.<br>Cheers,<br>Steven</p></blockquote><h3 id="然后设置的CNAME文件"><a href="#然后设置的CNAME文件" class="headerlink" title="然后设置的CNAME文件"></a>然后设置的CNAME文件</h3><p>将CNAME文件放在网站的根目录(也就是Github Page 仓库的根目录中),配合设置域名的DNS解析,可以达到使用你自己的域名访问到博客的效果. (而不是 xxx.github.io)</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824121410.png" alt></p><p>这里讲Hexo博客设置<code>CNAME</code>文件时的一些坑</p><p>当我生成完文件,然后把<code>CNAME</code>丢入public,然后上传到GitHub仓库,嗯,设置好了</p><p>可是问题来了,我每次生成CNAME文件都会不见,消失</p><p>后面发现Hexo <code>source</code>文件夹中自己写入的内容都会原封不动的复制到<code>public</code>中</p><p>于是<strong>在<code>source</code>文件夹中添加一个<code>CNAME</code>文件,在文件中写入你配置的好的域</strong>就好了</p><blockquote><p>注意:不是<code>CNAME.txt</code>,<code>CNAME</code>文件中只能有一个自定义域</p></blockquote><p>如</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824122245.png" alt></p><p>(当然,不一定需要在根域,看个人喜好)</p><h3 id="设置Github仓库"><a href="#设置Github仓库" class="headerlink" title="设置Github仓库"></a>设置Github仓库</h3><p>打开网页Github仓库,点击<code>Settings</code>,向下拉,会发现<code>Github Page</code>的相关设定</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190824122915.png" alt></p><p>在<code>Custom domain</code>中填入刚刚在CNAME填写的域名提交,约要十几分钟后,使用HTTPS协议访问的域名,就看到小绿锁了</p><h2 id="方案二-使用cloudflare的代理实现HTTPS"><a href="#方案二-使用cloudflare的代理实现HTTPS" class="headerlink" title="方案二 使用cloudflare的代理实现HTTPS"></a>方案二 使用cloudflare的代理实现HTTPS</h2><blockquote><p>不推荐,以后再写</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;9012年了,Chrome纷纷给各种HTTP网站打上不安全,由于我用了自定义域名,所以并没有小绿锁,为了”安全”一点,把博客也加上小绿锁好了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;为博客添加HTTPS&quot;&gt;&lt;a href=&quot;#为博客添加
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Hexo" scheme="https://hex.moe/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>为Hexo博客安装评论系统(Gitalk)</title>
    <link href="https://hex.moe/p/d438500a/"/>
    <id>https://hex.moe/p/d438500a/</id>
    <published>2019-08-23T09:40:04.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>想给博客安装一个评论系统,我了解了许多评论插件多说,Disqus,Gitment和Gitalk等鉴于我已经把博客挂在Github上了,就打算用Github全家桶了,最后我选择了Gitalk,因为Gitment看了下好像挺久没更新了.</p></blockquote><blockquote><p>顺便讲下遇到的坑</p></blockquote><h1 id="为博客安装Gitalk"><a href="#为博客安装Gitalk" class="headerlink" title="为博客安装Gitalk"></a>为博客安装Gitalk</h1><h2 id="申请Github-Application"><a href="#申请Github-Application" class="headerlink" title="申请Github Application"></a>申请Github Application</h2><p>可以点击 <strong><a href="https://github.com/settings/applications/new" target="_blank" rel="external nofollow noopener noreferrer">这里</a></strong> 来新申请一个Github Application</p><p><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190823211342.png" alt></p><p>按照这样的方式填写↑</p><p>填写好后会得到一个<code>Client ID</code>和一个<code>Client Secret</code></p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>若你使用的主题有自带Gitalk,你仅仅需要在主题的<code>config</code>中你填入ID和Secret之类的值</p><p>若你是主题开发者或自己魔改的主题需要修改<code>new Gitalk</code>中的参数</p><p>这部分建议参考</p><blockquote><p><a href="https://segmentfault.com/a/1190000014085547" target="_blank" rel="external nofollow noopener noreferrer">https://segmentfault.com/a/1190000014085547</a></p></blockquote><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><blockquote><p><del>你若使用HTTP那就一切安好</del></p></blockquote><p>我之前的博客HTTPS方案是使用<code>cloudflare</code>CDN的单向HTTPS,这种HTTPS实现方式是当你访问我的网址</p><blockquote><p><a href="https://hex.moe">https://hex.moe</a> -&gt; Proxies -&gt; Source(github page)</p></blockquote><p>时先经过CDN反向代理服务器,CDN的反向代理服务器再用HTTP请求我的源网站</p><p>这样乍一看好像没有问题,但是使用上Gitalk的时候就出现问题了,似乎回调时Github认为域不相符,给我拒绝了</p><p>出现的情况:<br><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190823213528.png" alt><br>打开页面时Gitalk无法正常加载</p><p>在排查了一个下午后,我选择放弃<code>cloudflare</code>的单向HTTPS方案,转为使用Github自带的HTTPS,关于这一点我会在后面的文章中介绍</p><p>将<code>cloudflare</code>的CDN卸下后再修改回调地址为HTTP</p><p>终于</p><p>Gitalk正常工作了<br><img src="https://cdn.jsdelivr.net/gh/LovelyWei/PicGoData/20190823213709.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;想给博客安装一个评论系统,我了解了许多评论插件多说,Disqus,Gitment和Gitalk等鉴于我已经把博客挂在Github上了,就打算用Github全家桶了,最后我选择了Gitalk,因为Gitment看了下好像挺久没更新了.&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
    
      <category term="Tech" scheme="https://hex.moe/tags/Tech/"/>
    
      <category term="Hexo" scheme="https://hex.moe/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hex.moe/p/4a17b156/"/>
    <id>https://hex.moe/p/4a17b156/</id>
    <published>2019-08-21T06:06:38.000Z</published>
    <updated>2022-11-18T10:19:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;Hexo&lt;/a&gt;! This is your very first post.
      
    
    </summary>
    
    
  </entry>
  
</feed>
